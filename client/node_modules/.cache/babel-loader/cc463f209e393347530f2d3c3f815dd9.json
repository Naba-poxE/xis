{"ast":null,"code":"import _regeneratorRuntime from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ALERT}from\"../types/alertType\";import{CREATE_CATEGORY,GET_CATEGORIES,UPDATE_CATEGORY,DELETE_CATEGORY}from\"../types/categoryType\";import{postAPI,getAPI,patchAPI,deleteAPI}from\"../../utils/FetchDatas\";import{checkTokenExp}from'../../utils/checkTokenExp';export var createCategory=function createCategory(name,token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result,access_token,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return checkTokenExp(token,dispatch);case 2:result=_context.sent;access_token=result?result:token;_context.prev=4;dispatch({type:ALERT,payload:{loading:true}});_context.next=8;return postAPI('category',{name:name},access_token);case 8:res=_context.sent;dispatch({type:CREATE_CATEGORY,payload:res.data.newCategory});dispatch({type:ALERT,payload:{loading:false}});_context.next=15;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](4);case 15:case\"end\":return _context.stop();}}},_callee,null,[[4,13]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getCategories=function getCategories(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:ALERT,payload:{loading:true}});_context2.next=4;return getAPI('category');case 4:res=_context2.sent;dispatch({type:GET_CATEGORIES,payload:res.data.categories});dispatch({type:ALERT,payload:{loading:false}});_context2.next=11;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateCategory=function updateCategory(data,token){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var result,access_token;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return checkTokenExp(token,dispatch);case 2:result=_context3.sent;access_token=result?result:token;_context3.prev=4;dispatch({type:UPDATE_CATEGORY,payload:data});_context3.next=8;return patchAPI(\"category/\".concat(data._id),{name:data.name},access_token);case 8:_context3.next=12;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](4);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[4,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var deleteCategory=function deleteCategory(id,token){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var result,access_token;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return checkTokenExp(token,dispatch);case 2:result=_context4.sent;access_token=result?result:token;_context4.prev=4;dispatch({type:DELETE_CATEGORY,payload:id});_context4.next=8;return deleteAPI(\"category/\".concat(id),access_token);case 8:_context4.next=12;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](4);case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[4,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/redux/actions/categoryActions.ts"],"names":["ALERT","CREATE_CATEGORY","GET_CATEGORIES","UPDATE_CATEGORY","DELETE_CATEGORY","postAPI","getAPI","patchAPI","deleteAPI","checkTokenExp","createCategory","name","token","dispatch","result","access_token","type","payload","loading","res","data","newCategory","getCategories","categories","updateCategory","_id","deleteCategory","id"],"mappings":"2NACA,OAAqBA,KAArB,KAAiC,oBAAjC,CAEA,OACIC,eADJ,CAGIC,cAHJ,CAIIC,eAJJ,CAKIC,eALJ,KAMO,uBANP,CAQA,OAASC,OAAT,CAAiBC,MAAjB,CAAwBC,QAAxB,CAAiCC,SAAjC,KAAkD,wBAAlD,CAEA,OAASC,aAAT,KAA8B,2BAA9B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAeC,KAAf,iGAAiC,iBAAMC,QAAN,oKACxCJ,CAAAA,aAAa,CAACG,KAAD,CAAQC,QAAR,CAD2B,QACvDC,MADuD,eAEvDC,YAFuD,CAExCD,MAAM,CAAGA,MAAH,CAAYF,KAFsB,iBAI3DC,QAAQ,CAAC,CAAEG,IAAI,CAAEhB,KAAR,CAAeiB,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAAxB,CAAD,CAAR,CAJ2D,sBAMzCb,CAAAA,OAAO,CAAC,UAAD,CAAa,CAAEM,IAAI,CAAJA,IAAF,CAAb,CAAuBI,YAAvB,CANkC,QAMrDI,GANqD,eAQ3DN,QAAQ,CAAC,CACPG,IAAI,CAACf,eADE,CAEPgB,OAAO,CAAEE,GAAG,CAACC,IAAJ,CAASC,WAFX,CAAD,CAAR,CAKAR,QAAQ,CAAC,CAAEG,IAAI,CAAEhB,KAAR,CAAeiB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAxB,CAAD,CAAR,CAb2D,sJAAjC,gEAAvB,CAmBP,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,mGAAM,kBAAOT,QAAP,+IAE3BA,QAAQ,CAAC,CAAEG,IAAI,CAAEhB,KAAR,CAAeiB,OAAO,CAAC,CAAEC,OAAO,CAAE,IAAX,CAAvB,CAAD,CAAR,CAF2B,uBAITZ,CAAAA,MAAM,CAAC,UAAD,CAJG,QAIrBa,GAJqB,gBAK3BN,QAAQ,CAAC,CACLG,IAAI,CAACd,cADA,CAELe,OAAO,CAAEE,GAAG,CAACC,IAAJ,CAASG,UAFb,CAAD,CAAR,CAKAV,QAAQ,CAAE,CAAEG,IAAI,CAAEhB,KAAR,CAAeiB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAxB,CAAF,CAAR,CAV2B,yJAAN,kEAAtB,CAgBP,MAAO,IAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACJ,IAAD,CAAkBR,KAAlB,kGAAoC,kBAAOC,QAAP,qKACzCJ,CAAAA,aAAa,CAACG,KAAD,CAAQC,QAAR,CAD4B,QACxDC,MADwD,gBAExDC,YAFwD,CAEzCD,MAAM,CAAGA,MAAH,CAAYF,KAFuB,kBAK1DC,QAAQ,CAAC,CAAEG,IAAI,CAACb,eAAP,CAAwBc,OAAO,CAAEG,IAAjC,CAAD,CAAR,CAL0D,uBAOpDb,CAAAA,QAAQ,oBAAaa,IAAI,CAACK,GAAlB,EAAyB,CACvCd,IAAI,CAAES,IAAI,CAACT,IAD4B,CAAzB,CAEfI,YAFe,CAP4C,oKAApC,kEAAvB,CAgBP,MAAO,IAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAaf,KAAb,kGAA+B,kBAAOC,QAAP,qKACpCJ,CAAAA,aAAa,CAACG,KAAD,CAAOC,QAAP,CADuB,QACnDC,MADmD,gBAEnDC,YAFmD,CAEpCD,MAAM,CAAGA,MAAH,CAAYF,KAFkB,kBAKrDC,QAAQ,CAAC,CAACG,IAAI,CAACZ,eAAN,CAAuBa,OAAO,CAAEU,EAAhC,CAAD,CAAR,CALqD,uBAM/CnB,CAAAA,SAAS,oBAAamB,EAAb,EAAkBZ,YAAlB,CANsC,oKAA/B,kEAAvB","sourcesContent":["import { Dispatch } from \"redux\";\nimport { IAlertType, ALERT} from \"../types/alertType\";\n\nimport {\n    CREATE_CATEGORY,\n    ICategoryType,\n    GET_CATEGORIES,\n    UPDATE_CATEGORY,\n    DELETE_CATEGORY\n} from \"../types/categoryType\";\n\nimport { postAPI,getAPI,patchAPI,deleteAPI } from \"../../utils/FetchDatas\";\nimport { ICategory } from \"../../utils/TypeScript\";\nimport { checkTokenExp } from '../../utils/checkTokenExp'\n\nexport const createCategory = (name: string, token: string) => async(dispatch: Dispatch<IAlertType |ICategoryType>) => {\n  const result = await checkTokenExp(token, dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({ type: ALERT, payload: { loading: true }})\n\n    const res = await postAPI('category', { name }, access_token)\n\n    dispatch({\n      type:CREATE_CATEGORY,\n      payload: res.data.newCategory\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false }})\n  } catch (err: any) {\n      // dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\n  }\n}\n\nexport const getCategories = () => async (dispatch: Dispatch<IAlertType |ICategoryType>) => {\n    try {\n        dispatch({ type: ALERT, payload:{ loading: true}})\n\n        const res = await getAPI('category')\n        dispatch({\n            type:GET_CATEGORIES,\n            payload: res.data.categories\n        })\n\n        dispatch( { type: ALERT, payload: { loading: false }})\n    } catch (err: any) {\n        // dispatch({ type: ALERT, payload: { errors: err.response.data.msg} })\n    }\n}\n\nexport const updateCategory = (data: ICategory, token: string) => async (dispatch: Dispatch<IAlertType |ICategoryType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    try {\n\n        dispatch({ type:UPDATE_CATEGORY, payload: data })\n\n        await patchAPI(`category/${data._id}`, { \n        name: data.name \n    }, access_token)\n\n  } catch (err: any) {\n    // dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\n  }\n}\n\nexport const deleteCategory = (id: string, token: string) => async (dispatch: Dispatch<IAlertType |ICategoryType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n   \n    try {\n        dispatch({type:DELETE_CATEGORY, payload: id})\n        await deleteAPI(`category/${id}`,access_token)\n    } catch (err: any) {\n        // dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}"]},"metadata":{},"sourceType":"module"}