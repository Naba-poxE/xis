{"ast":null,"code":"import{ALERT}from'../../redux/types/alertType';import{useDispatch}from'react-redux';import{useCallback,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Toast=function Toast(_ref){var title=_ref.title,body=_ref.body,bgColor=_ref.bgColor;var dispatch=useDispatch();var handleClose=useCallback(function(){dispatch({type:ALERT,payload:{}});},[dispatch]);useEffect(function(){var delayDebounce=setTimeout(function(){handleClose();},2000);return function(){return clearTimeout(delayDebounce);};},[handleClose]);return/*#__PURE__*/_jsxs(\"div\",{className:\"toast show position-fixed text-light \".concat(bgColor),style:{top:'5px',right:'5px',zIndex:50,minWidth:'200px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toast-header text-light \".concat(bgColor),children:[/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:title}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",\"data-bs-dismiss\":\"toast\",\"aria-label\":\"Close\",onClick:handleClose})]}),/*#__PURE__*/_jsx(\"div\",{className:\"toast-body\",children:typeof body==='string'?body:/*#__PURE__*/_jsx(\"ul\",{children:body.map(function(text,index){return/*#__PURE__*/_jsx(\"li\",{children:text},index);})})})]});};export default Toast;","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/components/alert/Toast.tsx"],"names":["ALERT","useDispatch","useCallback","useEffect","Toast","title","body","bgColor","dispatch","handleClose","type","payload","delayDebounce","setTimeout","clearTimeout","top","right","zIndex","minWidth","map","text","index"],"mappings":"AAAA,OAASA,KAAT,KAAsB,6BAAtB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,CAAsBC,SAAtB,KAAuC,OAAvC,C,wFAQA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoC,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,IAA2B,MAA3BA,IAA2B,CAArBC,OAAqB,MAArBA,OAAqB,CAC/C,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,WAAW,CAAGP,WAAW,CAAC,UAAM,CACrCM,QAAQ,CAAC,CAAEE,IAAI,CAAEV,KAAR,CAAeW,OAAO,CAAE,EAAxB,CAAD,CAAR,CACD,CAF+B,CAE9B,CAACH,QAAD,CAF8B,CAA/B,CAIDL,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,aAAa,CAAGC,UAAU,CAAC,UAAM,CACrCJ,WAAW,GACZ,CAF+B,CAE9B,IAF8B,CAAhC,CAIA,MAAO,kBAAMK,CAAAA,YAAY,CAACF,aAAD,CAAlB,EAAP,CACD,CANQ,CAMP,CAACH,WAAD,CANO,CAAT,CAUE,mBAEE,aAAK,SAAS,gDAA0CF,OAA1C,CAAd,CACA,KAAK,CAAE,CAACQ,GAAG,CAAE,KAAN,CAAaC,KAAK,CAAE,KAApB,CAA2BC,MAAM,CAAE,EAAnC,CAAuCC,QAAQ,CAAE,OAAjD,CADP,wBAGE,aAAK,SAAS,mCAA6BX,OAA7B,CAAd,wBACE,eAAQ,SAAS,CAAC,SAAlB,UAA6BF,KAA7B,EADF,cAEE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,WAAhC,CACA,kBAAgB,OADhB,CACwB,aAAW,OADnC,CAEA,OAAO,CAAEI,WAFT,EAFF,GAHF,cAUE,YAAK,SAAS,CAAC,YAAf,UAEI,MAAOH,CAAAA,IAAP,GAAiB,QAAjB,CACEA,IADF,cAEE,oBAEEA,IAAI,CAACa,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,qBACP,oBAAiBD,IAAjB,EAASC,KAAT,CADO,EAAT,CAFF,EAJN,EAVF,GAFF,CA4BD,CA7CH,CA+CA,cAAejB,CAAAA,KAAf","sourcesContent":["import { ALERT } from '../../redux/types/alertType'\nimport { useDispatch } from 'react-redux'\nimport { useCallback, useEffect } from 'react'\n\ninterface IProps {\n    title: string\n    body: string | string[]\n    bgColor: string\n  }\n  \nconst Toast = ({title, body, bgColor}: IProps) => {\n   const dispatch = useDispatch()\n\n   const handleClose = useCallback(() => {\n    dispatch({ type: ALERT, payload: {} })\n  },[dispatch])\n  \n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      handleClose()\n    },2000)\n\n    return () => clearTimeout(delayDebounce)\n  },[handleClose])\n\n    \n  \n    return (\n\n      <div className={`toast show position-fixed text-light ${bgColor}`}\n      style={{top: '5px', right: '5px', zIndex: 50, minWidth: '200px'}}>\n  \n        <div className={`toast-header text-light ${bgColor}`}>\n          <strong className=\"me-auto\">{title}</strong>\n          <button type=\"button\" className=\"btn-close\" \n          data-bs-dismiss=\"toast\" aria-label=\"Close\"\n          onClick={handleClose} />\n        </div>\n  \n        <div className=\"toast-body\">\n          {\n            typeof(body) === 'string'\n            ? body\n            : <ul>\n              {\n                body.map((text, index) => (\n                  <li key={index}>{text}</li>\n                ))\n              }\n            </ul>\n          }\n        </div>\n  \n      </div>\n    )\n  }\n\nexport default Toast;"]},"metadata":{},"sourceType":"module"}