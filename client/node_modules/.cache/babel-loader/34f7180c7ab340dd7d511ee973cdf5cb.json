{"ast":null,"code":"import React from'react';import{useParams}from\"react-router-dom\";import NotFound from'./components/global/NotFound';import{jsx as _jsx}from\"react/jsx-runtime\";var generatePage=function generatePage(name){var component=function component(){return require(\"./pages/\".concat(name)).default;};//takes 'name from PageRender and the search for the path \n//like './pages/register if found try block if not catch block\ntry{return/*#__PURE__*/React.createElement(component());}catch(err){return/*#__PURE__*/_jsx(NotFound,{});}};var PageRender=function PageRender(){var _useParams=useParams(),page=_useParams.page,slug=_useParams.slug;var name='';if(page){name=slug?\"\".concat(page,\"/[slug]\"):\"\".concat(page);// `${page}/[slug]` here the [slug] actually represents the [slug] named files like slug.tsx\n}//and page represents the name of the folder that stores tha [slug] \n//so everything that has [slug] has a folder that represents the page in url\nreturn generatePage(name);};export default PageRender;","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/PageRender.tsx"],"names":["React","useParams","NotFound","generatePage","name","component","require","default","createElement","err","PageRender","page","slug"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,C,2CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAc,CAC/B,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMC,CAAAA,OAAO,mBAAYF,IAAZ,EAAP,CAA2BG,OAAjC,EAAlB,CAA2D;AACA;AAC3D,GAAI,CACA,mBAAOP,KAAK,CAACQ,aAAN,CAAoBH,SAAS,EAA7B,CAAP,CACH,CAAC,MAAOI,GAAP,CAAY,CACV,mBAAO,KAAC,QAAD,IAAP,CACH,CACJ,CARD,CAUA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErB,eAAgCT,SAAS,EAAzC,CAAQU,IAAR,YAAQA,IAAR,CAAaC,IAAb,YAAaA,IAAb,CAEA,GAAIR,CAAAA,IAAI,CAAG,EAAX,CAEA,GAAGO,IAAH,CAAS,CACLP,IAAI,CAAGQ,IAAI,WAAMD,IAAN,sBAAyBA,IAAzB,CAAX,CAA2C;AAC9C,CAA8C;AACA;AAC/C,MAAOR,CAAAA,YAAY,CAACC,IAAD,CAAnB,CACH,CAXD,CAaA,cAAeM,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { IParams } from \"./utils/TypeScript\";\nimport NotFound from './components/global/NotFound';\n\n\nconst generatePage = (name:any) => {\n    const component = () => require(`./pages/${name}`).default //takes 'name from PageRender and the search for the path \n                                                               //like './pages/register if found try block if not catch block\n    try {\n        return React.createElement(component())\n    } catch (err) {\n        return <NotFound />\n    }\n}\n\nconst PageRender = () => {\n\n    const { page,slug } : IParams = useParams()\n\n    let name = '';\n\n    if(page) {\n        name = slug ? `${page}/[slug]` : `${page}` // `${page}/[slug]` here the [slug] actually represents the [slug] named files like slug.tsx\n    }                                              //and page represents the name of the folder that stores tha [slug] \n                                                   //so everything that has [slug] has a folder that represents the page in url\n    return generatePage(name)\n}\n\nexport default PageRender;"]},"metadata":{},"sourceType":"module"}