{"ast":null,"code":"import{useDispatch}from\"react-redux\";import{Link}from\"react-router-dom\";import{countView}from\"../../redux/actions/blogActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardVert=function CardVert(_ref){var blog=_ref.blog;var dispatch=useDispatch();return/*#__PURE__*/_jsxs(\"div\",{className:\"card card__none scale_card bg-white\",style:{borderRadius:'15px'},children:[typeof blog.thumbnail==='string'&&/*#__PURE__*/_jsx(Link,{onClick:function onClick(){return dispatch(countView(blog._id));},to:\"/blog/\".concat(blog._id),children:/*#__PURE__*/_jsx(\"img\",{src:blog.thumbnail,className:\"card-img-top \",alt:\"...\",style:{height:'200px',objectFit:'cover'}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body text-capitalize\",children:[/*#__PURE__*/_jsx(\"li\",{children:new Date(blog.createdAt).toDateString()}),/*#__PURE__*/_jsx(\"h5\",{className:\"card-title fs-4\",children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){return dispatch(countView(blog._id));},to:\"/blog/\".concat(blog._id),children:blog.title})}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:blog.description.slice(0,70)+\"...\"}),/*#__PURE__*/_jsx(\"span\",{className:\"card-text\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"text-secondary\",children:[\"By:\",typeof blog.user!=='string'&&/*#__PURE__*/_jsx(Link,{className:\"username\",to:\"/profile/\".concat(blog.user._id),children:blog.user.name})]})})]})]});};export default CardVert;","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/components/cards/CardVert.tsx"],"names":["useDispatch","Link","countView","CardVert","blog","dispatch","borderRadius","thumbnail","_id","height","objectFit","Date","createdAt","toDateString","title","description","slice","user","name"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,iCAA1B,C,wFAOA,GAAMC,CAAAA,QAA0B,CAAG,QAA7BA,CAAAA,QAA6B,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAG7C,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CAEA,mBACI,aAAK,SAAS,CAAC,qCAAf,CAAqD,KAAK,CAAE,CAACM,YAAY,CAAE,MAAf,CAA5D,WAEQ,MAAOF,CAAAA,IAAI,CAACG,SAAZ,GAA2B,QAA3B,eACA,KAAC,IAAD,EAAM,OAAO,CAAE,yBAAMF,CAAAA,QAAQ,CAACH,SAAS,CAACE,IAAI,CAACI,GAAN,CAAV,CAAd,EAAf,CAAoD,EAAE,iBAAWJ,IAAI,CAACI,GAAhB,CAAtD,uBACI,YAAK,GAAG,CAAEJ,IAAI,CAACG,SAAf,CAA0B,SAAS,CAAC,eAApC,CAAoD,GAAG,CAAC,KAAxD,CACI,KAAK,CAAE,CAACE,MAAM,CAAE,OAAT,CAAkBC,SAAS,CAAE,OAA7B,CADX,EADJ,EAHR,cAQI,aAAK,SAAS,CAAC,2BAAf,wBACI,oBACK,GAAIC,CAAAA,IAAJ,CAASP,IAAI,CAACQ,SAAd,EAAyBC,YAAzB,EADL,EADJ,cAII,WAAI,SAAS,CAAC,iBAAd,uBACI,KAAC,IAAD,EAAM,OAAO,CAAE,yBAAMR,CAAAA,QAAQ,CAACH,SAAS,CAACE,IAAI,CAACI,GAAN,CAAV,CAAd,EAAf,CAAoD,EAAE,iBAAWJ,IAAI,CAACI,GAAhB,CAAtD,UACKJ,IAAI,CAACU,KADV,EADJ,EAJJ,cASI,UAAG,SAAS,CAAC,WAAb,UACKV,IAAI,CAACW,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,CAAyB,EAAzB,EAA+B,KADpC,EATJ,cAYI,aAAM,SAAS,CAAC,WAAhB,uBACI,eAAO,SAAS,CAAC,gBAAjB,iBAGI,MAAOZ,CAAAA,IAAI,CAACa,IAAZ,GAAsB,QAAtB,eACA,KAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,oBAAcb,IAAI,CAACa,IAAL,CAAUT,GAAxB,CAA7B,UACIJ,IAAI,CAACa,IAAL,CAAUC,IADd,EAJJ,GADJ,EAZJ,GARJ,GADJ,CAmCH,CAxCD,CA0CA,cAAef,CAAAA,QAAf","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { countView } from \"../../redux/actions/blogActions\";\nimport { IBlog } from \"../../utils/TypeScript\";\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst CardVert: React.FC<IProps> = ({ blog }) => {\n\n\n    const dispatch = useDispatch()\n\n    return(\n        <div className=\"card card__none scale_card bg-white\" style={{borderRadius: '15px'}}>\n            {\n                typeof(blog.thumbnail) === 'string' &&\n                <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                    <img src={blog.thumbnail} className=\"card-img-top \" alt=\"...\"\n                        style={{height: '200px', objectFit: 'cover'}} />\n                </Link>\n            }\n            <div className=\"card-body text-capitalize\">\n                <li>\n                    {new Date(blog.createdAt).toDateString()}\n                </li>\n                <h5 className=\"card-title fs-4\">\n                    <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                        {blog.title}\n                    </Link>\n                </h5>\n                <p className=\"card-text\">\n                    {blog.description.slice(0,70) + \"...\"}\n                </p>\n                <span className=\"card-text\">\n                    <small className=\"text-secondary\">\n                    By: \n                        {\n                        typeof(blog.user) !== 'string' &&\n                        <Link className=\"username\" to={`/profile/${blog.user._id}`}>\n                           {blog.user.name}\n                        </Link>\n                        }\n                    </small>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default CardVert;"]},"metadata":{},"sourceType":"module"}