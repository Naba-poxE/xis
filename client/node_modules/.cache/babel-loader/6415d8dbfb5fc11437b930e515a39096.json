{"ast":null,"code":"import _regeneratorRuntime from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{deleteAPI,getAPI,patchAPI,postAPI,putAPI}from\"../../utils/FetchDatas\";import{imageUpload}from\"../../utils/ImageUpload\";import{ALERT}from\"../types/alertType\";import{GET_BLOGS_CATEGORY_ID,GET_HOME_BLOGS,GET_BLOGS_USER_ID,CREATE_BLOGS_USER_ID,DELETE_BLOGS_USER_ID}from\"../types/blogType\";import{checkTokenExp}from'../../utils/checkTokenExp';export var createBlog=function createBlog(blog,token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var url,result,access_token,photo,newBlog,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return checkTokenExp(token,dispatch);case 2:result=_context.sent;access_token=result?result:token;_context.prev=4;dispatch({type:ALERT,payload:{loading:true}});if(!(typeof blog.thumbnail!=='string')){_context.next=13;break;}_context.next=9;return imageUpload(blog.thumbnail);case 9:photo=_context.sent;url=photo.url;_context.next=14;break;case 13:url=blog.thumbnail;case 14:newBlog=_objectSpread(_objectSpread({},blog),{},{thumbnail:url});_context.next=17;return postAPI('blog',newBlog,access_token);case 17:res=_context.sent;dispatch({type:CREATE_BLOGS_USER_ID,payload:res.data});dispatch({type:ALERT,payload:{success:\"Success! Blog created\"}});_context.next=25;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](4);return _context.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context.t0.response.data.msg}}));case 25:case\"end\":return _context.stop();}}},_callee,null,[[4,22]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getHomeBlogs=function getHomeBlogs(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:ALERT,payload:{loading:true}});_context2.next=4;return getAPI('home/blogs');case 4:res=_context2.sent;dispatch({type:GET_HOME_BLOGS,payload:res.data});dispatch({type:ALERT,payload:{loading:false}});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context2.t0.response.data.msg}}));case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getBlogsByCategoryId=function getBlogsByCategoryId(id,search){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var limit,value,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;limit=8;value=search?search:'?page=1';dispatch({type:ALERT,payload:{loading:true}});_context3.next=6;return getAPI(\"blogs/category/\".concat(id).concat(value,\"&limit=\").concat(limit));case 6:res=_context3.sent;dispatch({type:GET_BLOGS_CATEGORY_ID,payload:_objectSpread(_objectSpread({},res.data),{},{id:id,search:search})});dispatch({type:ALERT,payload:{loading:false}});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context3.t0.response.data.msg}}));case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var getBlogsByUserId=function getBlogsByUserId(id,search){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var limit,value,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;limit=3;value=search?search:'?page=1';dispatch({type:ALERT,payload:{loading:true}});_context4.next=6;return getAPI(\"blogs/user/\".concat(id).concat(value,\"&limit=\").concat(limit));case 6:res=_context4.sent;dispatch({type:GET_BLOGS_USER_ID,payload:_objectSpread(_objectSpread({},res.data),{},{id:id,search:search})});dispatch({type:ALERT,payload:{loading:false}});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context4.t0.response.data.msg}}));case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[0,11]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var updateBlog=function updateBlog(blog,token){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var url,result,access_token,photo,newBlog,res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return checkTokenExp(token,dispatch);case 2:result=_context5.sent;access_token=result?result:token;_context5.prev=4;dispatch({type:ALERT,payload:{loading:true}});if(!(typeof blog.thumbnail!=='string')){_context5.next=13;break;}_context5.next=9;return imageUpload(blog.thumbnail);case 9:photo=_context5.sent;url=photo.url;_context5.next=14;break;case 13:url=blog.thumbnail;case 14:newBlog=_objectSpread(_objectSpread({},blog),{},{thumbnail:url});_context5.next=17;return putAPI(\"blog/\".concat(newBlog._id),newBlog,access_token);case 17:res=_context5.sent;dispatch({type:ALERT,payload:{success:res.data.msg}});_context5.next=24;break;case 21:_context5.prev=21;_context5.t0=_context5[\"catch\"](4);return _context5.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context5.t0.response.data.msg}}));case 24:case\"end\":return _context5.stop();}}},_callee5,null,[[4,21]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var deleteBlog=function deleteBlog(blog,token){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var result,access_token;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return checkTokenExp(token,dispatch);case 2:result=_context6.sent;access_token=result?result:token;_context6.prev=4;dispatch({type:DELETE_BLOGS_USER_ID,payload:blog});_context6.next=8;return deleteAPI(\"/blog/\".concat(blog._id),access_token);case 8:_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](4);return _context6.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context6.t0.response.data.msg}}));case 13:case\"end\":return _context6.stop();}}},_callee6,null,[[4,10]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var countView=function countView(id){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var res,view;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return getAPI(\"blog/\".concat(id));case 3:res=_context7.sent;view=res.data.views;_context7.next=7;return patchAPI(\"count_view/\".concat(id),{views:view+1});case 7:_context7.next=12;break;case 9:_context7.prev=9;_context7.t0=_context7[\"catch\"](0);return _context7.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:_context7.t0.response.data.msg}}));case 12:case\"end\":return _context7.stop();}}},_callee7,null,[[0,9]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/redux/actions/blogActions.ts"],"names":["deleteAPI","getAPI","patchAPI","postAPI","putAPI","imageUpload","ALERT","GET_BLOGS_CATEGORY_ID","GET_HOME_BLOGS","GET_BLOGS_USER_ID","CREATE_BLOGS_USER_ID","DELETE_BLOGS_USER_ID","checkTokenExp","createBlog","blog","token","dispatch","result","access_token","type","payload","loading","thumbnail","photo","url","newBlog","res","data","success","errors","response","msg","getHomeBlogs","getBlogsByCategoryId","id","search","limit","value","getBlogsByUserId","updateBlog","_id","deleteBlog","countView","view","views"],"mappings":"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","sourcesContent":["import { Dispatch } from \"redux\"\nimport { deleteAPI, getAPI, patchAPI, postAPI, putAPI } from \"../../utils/FetchDatas\";\nimport { imageUpload } from \"../../utils/ImageUpload\";\nimport { IBlog } from \"../../utils/TypeScript\"\nimport { ALERT, IAlertType } from \"../types/alertType\"\nimport {\n   GET_BLOGS_CATEGORY_ID, \n   GET_HOME_BLOGS,\n   GET_BLOGS_USER_ID, \n   IGetBlogsCategoryType, \n   IGetBlogsUserType, \n   IGetHomeBlogsType,\n   ICreateBlogsUserType,\n   CREATE_BLOGS_USER_ID,\n   IDeleteBlogsUserType,\n   DELETE_BLOGS_USER_ID,\n  } from \"../types/blogType\";\n\nimport { checkTokenExp } from '../../utils/checkTokenExp'\n\n\nexport const createBlog = (blog: IBlog, token: string) => \nasync (dispatch: Dispatch<IAlertType | ICreateBlogsUserType>) => {\n  let url;\n  const result = await checkTokenExp(token,dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n    \n    if(typeof(blog.thumbnail) !== 'string'){\n      const photo = await imageUpload(blog.thumbnail)\n      url = photo.url\n    }else{\n      url = blog.thumbnail\n    }\n\n    let newBlog ={...blog, thumbnail: url}\n\n    const res = await postAPI('blog', newBlog, access_token)\n\n    dispatch({ \n      type: CREATE_BLOGS_USER_ID,\n      payload: res.data\n    })\n   \n    dispatch({ type: ALERT, payload: { success: \"Success! Blog created\" } })\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const getHomeBlogs = () => async (dispatch: Dispatch<IAlertType | IGetHomeBlogsType>) => {\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    const res = await getAPI('home/blogs')\n    \n    dispatch({\n      type: GET_HOME_BLOGS,\n      payload: res.data\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false } })\n\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const getBlogsByCategoryId = (id: string, search: string) => async (dispatch: Dispatch<IAlertType | IGetBlogsCategoryType>) => {\n  try {\n    let limit = 8;\n    let value = search ? search : '?page=1'\n\n    dispatch({ type: ALERT, payload: { loading: true } })\n \n    const res = await getAPI(`blogs/category/${id}${value}&limit=${limit}`) \n    \n    dispatch({\n      type: GET_BLOGS_CATEGORY_ID,\n      payload: {...res.data, id, search}\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false } })\n\n  } catch (err: any) {\n      return  dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const getBlogsByUserId = (id: string, search: string) => async (dispatch: Dispatch<IAlertType | IGetBlogsUserType>) => {\n  try {\n    let limit = 3;\n    let value = search ? search : '?page=1';\n\n    dispatch({ type: ALERT, payload: { loading: true } });\n\n    const res = await getAPI(`blogs/user/${id}${value}&limit=${limit}`);\n\n    dispatch({\n      type: GET_BLOGS_USER_ID,\n      payload: { ...res.data, id, search }\n    });\n\n    dispatch({ type: ALERT, payload: { loading: false } });\n\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\n  }\n}\n\nexport const updateBlog = (blog: IBlog, token: string) => async(dispatch: Dispatch<IAlertType>) => {\n  let url;\n  const result = await checkTokenExp(token,dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    if(typeof(blog.thumbnail) !== 'string'){\n      const photo = await imageUpload(blog.thumbnail)\n      url = photo.url\n    }else{\n      url = blog.thumbnail\n    }\n\n    const newBlog ={...blog, thumbnail: url}\n    \n    const res = await putAPI(`blog/${newBlog._id}`, newBlog, access_token)\n\n    dispatch({ type: ALERT, payload: { success: res.data.msg } })\n\n  } catch(err: any) {\n      return  dispatch({ type:ALERT, payload: { errors: err.response.data.msg }})\n  }\n\n}\n\nexport const deleteBlog = (blog: IBlog, token: string) => async(dispatch: Dispatch<IAlertType | IDeleteBlogsUserType>) => {\n  const result = await checkTokenExp(token,dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({\n      type: DELETE_BLOGS_USER_ID,\n      payload: blog\n    })\n     \n    await deleteAPI(`/blog/${blog._id}`, access_token)\n\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const countView = (id?: string) => async(dispatch: Dispatch<IAlertType>) => {\n  try {\n      const res = await getAPI(`blog/${id}`)\n      \n      let view = res.data.views\n\n      await patchAPI(`count_view/${id}`,{views: view + 1})\n      \n  } catch (err: any) {\n      return dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n  }\n}"]},"metadata":{},"sourceType":"module"}