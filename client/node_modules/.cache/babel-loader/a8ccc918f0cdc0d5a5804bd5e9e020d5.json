{"ast":null,"code":"import _regeneratorRuntime from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{postAPI,deleteAPI,getAPI}from\"../../utils/FetchDatas\";import{validateEmail}from\"../../utils/Valid\";import{ALERT}from\"../types/alertType\";import{checkTokenExp}from\"../../utils/checkTokenExp\";import{DELETE_EMAIL,GET_EMAILS}from\"../types/subscriptionType\";export var postEmail=function postEmail(email){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var check;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:check=validateEmail(email);if(check){_context.next=3;break;}return _context.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:\"Please enter a valid email!\"}}));case 3:_context.prev=3;_context.next=6;return postAPI('subscribe',{email:email});case 6:dispatch({type:ALERT,payload:{success:\"Congrats! See ya in your inbox\"}});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);dispatch({type:ALERT,payload:{errors:_context.t0.response.data.msg}});case 12:case\"end\":return _context.stop();}}},_callee,null,[[3,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getEmails=function getEmails(token){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var result,access_token,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return checkTokenExp(token,dispatch);case 2:result=_context2.sent;access_token=result?result:token;_context2.prev=4;dispatch({type:ALERT,payload:{loading:true}});_context2.next=8;return getAPI('subscribe',access_token);case 8:res=_context2.sent;dispatch({type:GET_EMAILS,payload:res.data});dispatch({type:ALERT,payload:{loading:false}});_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](4);dispatch({type:ALERT,payload:{errors:_context2.t0.response.data.msg}});case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[4,13]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var deleteEmail=function deleteEmail(id,token){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var result,access_token;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return checkTokenExp(token,dispatch);case 2:result=_context3.sent;access_token=result?result:token;_context3.prev=4;dispatch({type:DELETE_EMAIL,payload:id});_context3.next=8;return deleteAPI(\"subscribe/\".concat(id),access_token);case 8:_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](4);dispatch({type:ALERT,payload:{errors:_context3.t0.response.data.msg}});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[4,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/redux/actions/subscriberAction.ts"],"names":["postAPI","deleteAPI","getAPI","validateEmail","ALERT","checkTokenExp","DELETE_EMAIL","GET_EMAILS","postEmail","email","dispatch","check","type","payload","errors","success","response","data","msg","getEmails","token","result","access_token","loading","res","deleteEmail","id"],"mappings":"2NACA,OAASA,OAAT,CAAiBC,SAAjB,CAA2BC,MAA3B,KAAyC,wBAAzC,CACA,OAASC,aAAT,KAA8B,mBAA9B,CACA,OAASC,KAAT,KAAkC,oBAAlC,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,OAASC,YAAT,CAAuBC,UAAvB,KAAyD,2BAAzD,CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,iGAAmB,iBAAOC,QAAP,4HAClCC,KADkC,CAC1BR,aAAa,CAACM,KAAD,CADa,IAEpCE,KAFoC,yDAEtBD,QAAQ,CAAC,CAACE,IAAI,CAAER,KAAP,CAAcS,OAAO,CAAE,CAACC,MAAM,CAAE,6BAAT,CAAvB,CAAD,CAFc,+CAK9Bd,CAAAA,OAAO,CAAC,WAAD,CAAa,CAACS,KAAK,CAALA,KAAD,CAAb,CALuB,QAOpCC,QAAQ,CAAC,CACLE,IAAI,CAAER,KADD,CAELS,OAAO,CAAE,CAAEE,OAAO,CAAE,gCAAX,CAFJ,CAAD,CAAR,CAPoC,+EAapCL,QAAQ,CAAC,CACLE,IAAI,CAAER,KADD,CAELS,OAAO,CAAE,CAAEC,MAAM,CAAE,YAAIE,QAAJ,CAAaC,IAAb,CAAkBC,GAA5B,CAFJ,CAAD,CAAR,CAboC,oEAAnB,gEAAlB,CAoBP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,kGAAkB,kBAAOV,QAAP,yKAClBL,CAAAA,aAAa,CAACe,KAAD,CAAOV,QAAP,CADK,QACjCW,MADiC,gBAEjCC,YAFiC,CAElBD,MAAM,CAAGA,MAAH,CAAYD,KAFA,kBAInCV,QAAQ,CAAC,CAACE,IAAI,CAAER,KAAP,CAAcS,OAAO,CAAC,CAACU,OAAO,CAAC,IAAT,CAAtB,CAAD,CAAR,CAJmC,uBAMjBrB,CAAAA,MAAM,CAAC,WAAD,CAAaoB,YAAb,CANW,QAM7BE,GAN6B,gBAQnCd,QAAQ,CAAC,CACLE,IAAI,CAAEL,UADD,CAELM,OAAO,CAAEW,GAAG,CAACP,IAFR,CAAD,CAAR,CAKAP,QAAQ,CAAC,CAACE,IAAI,CAACR,KAAN,CAAaS,OAAO,CAAC,CAACU,OAAO,CAAC,KAAT,CAArB,CAAD,CAAR,CAbmC,qFAenCb,QAAQ,CAAC,CAACE,IAAI,CAAER,KAAP,CAAcS,OAAO,CAAE,CAACC,MAAM,CAAE,aAAIE,QAAJ,CAAaC,IAAb,CAAkBC,GAA3B,CAAvB,CAAD,CAAR,CAfmC,uEAAlB,kEAAlB,CAmBP,MAAO,IAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,EAAD,CAAWN,KAAX,kGAA4B,kBAAOV,QAAP,qKAC9BL,CAAAA,aAAa,CAACe,KAAD,CAAOV,QAAP,CADiB,QAC7CW,MAD6C,gBAE7CC,YAF6C,CAE9BD,MAAM,CAAGA,MAAH,CAAYD,KAFY,kBAI/CV,QAAQ,CAAC,CAACE,IAAI,CAACN,YAAN,CAAmBO,OAAO,CAACa,EAA3B,CAAD,CAAR,CAJ+C,uBAKzCzB,CAAAA,SAAS,qBAAcyB,EAAd,EAAmBJ,YAAnB,CALgC,6FAQ/CZ,QAAQ,CAAC,CAACE,IAAI,CAAER,KAAP,CAAcS,OAAO,CAAE,CAACC,MAAM,CAAE,aAAIE,QAAJ,CAAaC,IAAb,CAAkBC,GAA3B,CAAvB,CAAD,CAAR,CAR+C,uEAA5B,kEAApB","sourcesContent":["import { Dispatch } from \"redux\";\nimport { postAPI,deleteAPI,getAPI } from \"../../utils/FetchDatas\";\nimport { validateEmail } from \"../../utils/Valid\";\nimport { ALERT, IAlertType } from \"../types/alertType\";\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\nimport { DELETE_EMAIL, GET_EMAILS, ISubscribeType } from \"../types/subscriptionType\";\n\n\n\nexport const postEmail = (email: string) => async (dispatch: Dispatch<IAlertType>) => {\n    const check = validateEmail(email)\n    if(!check) return dispatch({type: ALERT, payload: {errors: \"Please enter a valid email!\"}})\n    try {\n        \n        await postAPI('subscribe',{email})\n\n        dispatch({\n            type: ALERT,\n            payload: { success: \"Congrats! See ya in your inbox\"}\n        })\n\n    } catch (err: any) {\n        dispatch({\n            type: ALERT,\n            payload: { errors: err.response.data.msg}\n        })\n    }\n}\n\nexport const getEmails = (token:string) => async (dispatch: Dispatch<IAlertType | ISubscribeType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({type: ALERT, payload:{loading:true}})\n\n        const res = await getAPI('subscribe',access_token)\n\n        dispatch({\n            type: GET_EMAILS,\n            payload: res.data\n        })\n        \n        dispatch({type:ALERT, payload:{loading:false}})\n    } catch (err:any) {\n        dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}\n\nexport const deleteEmail = (id:string,token:string) => async (dispatch: Dispatch<IAlertType | ISubscribeType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({type:DELETE_EMAIL,payload:id})\n        await deleteAPI(`subscribe/${id}`,access_token)\n\n    } catch (err:any) {\n        dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}"]},"metadata":{},"sourceType":"module"}