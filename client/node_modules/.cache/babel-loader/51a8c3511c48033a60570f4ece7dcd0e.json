{"ast":null,"code":"import _regeneratorRuntime from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/kushal/tip-saza/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{AUTH}from\"../types/authType\";import{ALERT}from\"../types/alertType\";import{GET_OTHER_INFO}from\"../types/profileType\";import{checkImage,imageUpload}from\"../../utils/ImageUpload\";import{getAPI,patchAPI}from\"../../utils/FetchDatas\";import{checkPassword}from\"../../utils/Valid\";import{checkTokenExp}from\"../../utils/checkTokenExp\";export var updateUser=function updateUser(avatar,name,auth){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var url,result,access_token,check,photo,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!auth.access_token||!auth.user)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:url='';_context.next=5;return checkTokenExp(auth.access_token,dispatch);case 5:result=_context.sent;access_token=result?result:auth.access_token;_context.prev=7;dispatch({type:ALERT,payload:{loading:true}});if(!avatar){_context.next=17;break;}check=checkImage(avatar);//just checking the requirements\nif(!check){_context.next=13;break;}return _context.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:check}}));case 13:_context.next=15;return imageUpload(avatar);case 15:photo=_context.sent;url=photo.url;case 17:dispatch({type:AUTH,payload:{access_token:auth.access_token,user:_objectSpread(_objectSpread({},auth.user),{},{avatar:url?url:auth.user.avatar,name:name?name:auth.user.name})}});_context.next=20;return patchAPI('user',{avatar:url?url:auth.user.avatar,name:name?name:auth.user.name},access_token);case 20:res=_context.sent;dispatch({type:ALERT,payload:{success:res.data.msg}});_context.next=27;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](7);dispatch({type:ALERT,payload:{errors:_context.t0.response.data.msg}});case 27:case\"end\":return _context.stop();}}},_callee,null,[[7,24]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var resetPassword=function resetPassword(password,cf_password,token){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var msg,result,access_token,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:msg=checkPassword(password,cf_password);if(!msg){_context2.next=3;break;}return _context2.abrupt(\"return\",dispatch({type:ALERT,payload:{errors:msg}}));case 3:_context2.next=5;return checkTokenExp(token,dispatch);case 5:result=_context2.sent;access_token=result?result:token;_context2.prev=7;dispatch({type:ALERT,payload:{loading:true}});_context2.next=11;return patchAPI('/reset_password',{password:password},access_token);case 11:res=_context2.sent;dispatch({type:ALERT,payload:{success:res.data.msg}});_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](7);dispatch({type:ALERT,payload:{errors:_context2.t0.response.data.msg}});case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[7,15]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getOtherInfo=function getOtherInfo(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:ALERT,payload:{loading:true}});_context3.next=4;return getAPI(\"user/\".concat(id));case 4:res=_context3.sent;dispatch({type:GET_OTHER_INFO,payload:res.data});dispatch({type:ALERT,payload:{}});_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);dispatch({type:ALERT,payload:{errors:_context3.t0.response.data.msg}});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/kushal/tip-saza/client/src/redux/actions/profileActions.ts"],"names":["AUTH","ALERT","GET_OTHER_INFO","checkImage","imageUpload","getAPI","patchAPI","checkPassword","checkTokenExp","updateUser","avatar","name","auth","dispatch","access_token","user","url","result","type","payload","loading","check","errors","photo","res","success","data","msg","response","resetPassword","password","cf_password","token","getOtherInfo","id"],"mappings":"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","sourcesContent":["import { Dispatch } from \"redux\";\nimport { AUTH, IAuth, IAuthType } from \"../types/authType\"\nimport { ALERT, IAlertType } from \"../types/alertType\";\nimport { GET_OTHER_INFO, IGetOtherInfoType } from \"../types/profileType\";\nimport { checkImage,imageUpload } from \"../../utils/ImageUpload\";\nimport { getAPI, patchAPI } from \"../../utils/FetchDatas\";\nimport { checkPassword } from \"../../utils/Valid\";\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\n\n\nexport const updateUser = (avatar: File, name: string, auth: IAuth) => async (dispatch: Dispatch<IAlertType | IAuthType>) => {\n    if(!auth.access_token || !auth.user) return;\n\n    let url = '';\n    const result = await checkTokenExp(auth.access_token,dispatch)\n    const access_token = result ? result : auth.access_token\n    try {\n        dispatch({type: ALERT, payload: {loading:true}}) \n\n        if(avatar) {\n            const check = checkImage(avatar) //just checking the requirements\n            if(check) {\n                return dispatch({ type: ALERT, payload: { errors: check}})\n            }\n\n            const photo = await imageUpload(avatar)\n            url = photo.url\n        }\n\n        dispatch({\n            type: AUTH, \n            payload: {\n                access_token: auth.access_token,\n                user: {\n                    ...auth.user,\n                    avatar: url ? url : auth.user.avatar,\n                    name : name ? name : auth.user.name\n                }\n        } })\n\n        const res = await patchAPI('user',{ \n            avatar: url ? url : auth.user.avatar,\n            name : name ? name : auth.user.name\n        }, access_token)\n\n        dispatch({type: ALERT, payload: { success: res.data.msg }}) \n\n    } catch (err: any) {\n       dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}\n\nexport const resetPassword = (password: string, cf_password: string, token: string) => async (dispatch: Dispatch<IAlertType | IAuthType>) => {\n    const msg = checkPassword(password, cf_password)\n    if(msg) return dispatch({ type:ALERT, payload: { errors: msg }})\n\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({ type: ALERT, payload: { loading: true}})\n        \n        const res = await patchAPI('/reset_password', { password }, access_token)\n\n        dispatch({ type: ALERT, payload: { success: res.data.msg}})\n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg}})\n    }\n}\n\nexport const getOtherInfo = (id: string) => async (dispatch: Dispatch<IAlertType | IGetOtherInfoType>) => {\n\n    try {\n        dispatch({ type: ALERT, payload: { loading: true}})\n        \n        const res = await getAPI(`user/${id}`)\n\n        dispatch({\n            type: GET_OTHER_INFO,\n            payload: res.data\n        })\n\n        dispatch({ type: ALERT, payload: { }})\n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg}})\n    }\n}"]},"metadata":{},"sourceType":"module"}