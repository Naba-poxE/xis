{"version":3,"sources":["redux/actions/blogActions.ts","utils/checkTokenExp.ts","components/global/NotFound.tsx","pages sync /^/.//.*$","redux/types/blogType.ts","redux/actions/authActions.ts","components/cards/SearchCard.tsx","components/global/Search.tsx","components/global/Menu.tsx","components/global/Header.tsx","PageRender.tsx","components/global/Footer.tsx","App.tsx","redux/reducers/authReducer.ts","redux/reducers/alertReducer.ts","redux/reducers/categoryReducer.ts","redux/reducers/homeBlogsReducer.ts","redux/reducers/blogsCategoryReducer.ts","redux/reducers/otherInfoReducer.ts","redux/reducers/blogsUserReducer.ts","redux/reducers/usersReducer.ts","redux/reducers/subscriptionReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx","utils/Valid.ts","components/global/Loading.tsx","redux/types/authType.ts","redux/types/categoryType.ts","utils/ImageUpload.ts","redux/actions/profileActions.ts","components/alert/Loading.tsx","components/alert/Toast.tsx","components/alert/Alert.tsx","components/global/Pagination.tsx","redux/types/subscriptionType.ts","redux/actions/categoryActions.ts","redux/types/usersType.ts","redux/types/alertType.ts","redux/actions/subscriberAction.ts","components/cards/CreateForm.tsx","components/editor/ReactQuill.tsx","pages/create_blog.tsx","components/cards/CardVert.tsx","components/cards/CardHorizontal.tsx","components/cards/CardHoriz.tsx","redux/types/profileType.ts","components/display/feature/FeatureList.tsx","components/display/feature/Trending.tsx","components/display/hero/Hero.tsx","components/display/cta/CTA.tsx","components/display/feature/Underrated.tsx","components/cards/CardGrid.tsx","components/cards/CardOverlay.tsx","components/display/feature/Popular.tsx","pages/index.tsx","utils/FetchDatas.ts","pages/about.tsx","pages/active/[slug].tsx","pages/blogs/[slug].tsx","pages/category.tsx","pages/forgot_password.tsx","pages/reset_password/[slug].tsx","pages/subscription.tsx","pages/update_blog/[slug].tsx","pages/views.tsx","components/profile/UserBlogs.tsx","components/profile/UserInfo.tsx","components/profile/OtherInfo.tsx","pages/profile/[slug].tsx","components/global/HrBanner.tsx","components/blog/DisplayBlog.tsx","pages/blog/[slug].tsx","components/auth/LoginPass.tsx","pages/jury_members_login.tsx","components/auth/RegisterForm.tsx","pages/jury_members_register.tsx","pages/users.tsx","redux/actions/usersActions.ts"],"names":["createBlog","blog","token","dispatch","a","checkTokenExp","result","access_token","type","ALERT","payload","loading","thumbnail","imageUpload","photo","url","newBlog","postAPI","res","CREATE_BLOGS_USER_ID","data","success","errors","response","msg","getHomeBlogs","getAPI","GET_HOME_BLOGS","getBlogsByCategoryId","id","search","value","GET_BLOGS_CATEGORY_ID","getBlogsByUserId","GET_BLOGS_USER_ID","updateBlog","putAPI","_id","deleteBlog","DELETE_BLOGS_USER_ID","deleteAPI","countView","view","views","patchAPI","jwt_decode","exp","Date","now","AUTH","NotFound","className","style","minHeight","top","left","transform","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","login","userLogin","localStorage","setItem","register","userRegister","check","validRegister","errLength","errMsg","refreshToken","getItem","removeItem","logout","forgotPassword","email","SearchCard","useDispatch","minWidth","onClick","to","title","user","name","createdAt","toDateString","Search","useState","setSearch","blogs","setBlogs","pathname","useLocation","useEffect","delayDebounce","setTimeout","length","console","log","clearTimeout","placeholder","onChange","target","background","zIndex","maxHeight","overflow","Menu","useSelector","state","auth","categories","isActive","pn","label","role","src","avatar","alt","Header","position","maxWidth","width","PageRender","useParams","page","slug","React","createElement","require","default","err","generatePage","Footer","fontSize","cursor","App","getCategories","Alert","exact","path","component","authReducer","action","alertReducer","categoryReducer","item","filter","homeBlogsReducer","blogsCategoryReducer","every","otherInfoReducer","GET_OTHER_INFO","blogsUserReducer","usersReducer","GET_USERS","DELETE_USER","subscriptionReducer","GET_EMAILS","DELETE_EMAIL","combineReducers","alert","homeBlogs","blogsCategory","otherInfo","blogsUser","users","subscribers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","password","cf_password","push","test","validateEmail","checkPassword","String","toLowerCase","validCreateBlog","content","description","category","trim","shallowEqual","object1","object2","key1","key2","key","Loading","CREATE_CATEGORY","GET_CATEGORIES","UPDATE_CATEGORY","DELETE_CATEGORY","checkImage","file","size","includes","formData","FormData","append","fetch","method","body","json","public_id","secure_url","updateUser","resetPassword","getOtherInfo","color","height","viewBox","stroke","strokeWidth","fill","points","x","y","Toast","bgColor","handleClose","useCallback","right","text","index","showErrMsg","showSuccessMsg","Pagination","total","callback","setPage","history","useHistory","newArray","Array","_","i","handlePagination","num","location","slice","Number","createCategory","newCategory","updateCategory","deleteCategory","postEmail","getEmails","deleteEmail","CreateForm","setBlog","handleChangeInput","bottom","opacity","accept","files","rows","resize","container","Quill","setBody","quillRef","useRef","modules","toolbar","handleChangeImage","input","click","onchange","quill","current","undefined","range","getEditor","getSelection","insertEmbed","getModule","addHandler","theme","ref","CreateBlog","initState","toISOString","setText","oldData","setOldData","divRef","then","catch","initData","div","innerText","handleSubmit","newData","CardHoriz","ReactQuill","dangerouslySetInnerHTML","__html","display","CardVert","borderRadius","objectFit","CardHorizontal","URL","createObjectURL","getMonth","window","confirm","FeatureList","Feature","Hero","homeBlog","Fragment","CTA","setEmail","Underrated","fontWeight","CardGrid","CardOverlay","Popular","editorBlogs","setEditorBlogs","editorBlog","Home","count","post","axios","headers","Authorization","get","patch","put","delete","About","Active","setErr","setSuccess","active_token","BlogsByCategory","categoryId","setCategoryId","categoryName","setCategoryName","setTotal","find","element","Category","setName","edit","setEdit","onSubmit","preventDefault","htmlFor","ForgotPassword","ResetPassword","setPassword","cfPassword","setCfPassword","typePass","setTypePass","typeCfPass","setTypeCfPass","Subscription","scope","handleDelete","UpdateBlog","Views","marginRight","UserBlogs","user_id","UserInfo","setUser","defaultValue","disabled","OtherInfo","other","setOther","newUser","Profile","HrBanner","DisplayBlog","handleShare","throwURL","encodeURI","href","open","marginLeft","marginTop","DetailBlog","setLoading","error","setError","LoginPass","setUserLogin","Login","replace","RegisterForm","setUserRegister","Register","Users","deleteUser"],"mappings":"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","file":"static/js/main.216bd2be.chunk.js","sourcesContent":["import { Dispatch } from \"redux\"\nimport { deleteAPI, getAPI, patchAPI, postAPI, putAPI } from \"../../utils/FetchDatas\";\nimport { imageUpload } from \"../../utils/ImageUpload\";\nimport { IBlog } from \"../../utils/TypeScript\"\nimport { ALERT, IAlertType } from \"../types/alertType\"\nimport {\n   GET_BLOGS_CATEGORY_ID, \n   GET_HOME_BLOGS,\n   GET_BLOGS_USER_ID, \n   IGetBlogsCategoryType, \n   IGetBlogsUserType, \n   IGetHomeBlogsType,\n   ICreateBlogsUserType,\n   CREATE_BLOGS_USER_ID,\n   IDeleteBlogsUserType,\n   DELETE_BLOGS_USER_ID,\n  } from \"../types/blogType\";\n\nimport { checkTokenExp } from '../../utils/checkTokenExp'\n\n\nexport const createBlog = (blog: IBlog, token: string) => \nasync (dispatch: Dispatch<IAlertType | ICreateBlogsUserType>) => {\n  let url;\n  const result = await checkTokenExp(token,dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n    \n    if(typeof(blog.thumbnail) !== 'string'){\n      const photo = await imageUpload(blog.thumbnail)\n      url = photo.url\n    }else{\n      url = blog.thumbnail\n    }\n\n    let newBlog ={...blog, thumbnail: url}\n\n    const res = await postAPI('blog', newBlog, access_token)\n\n    dispatch({ \n      type: CREATE_BLOGS_USER_ID,\n      payload: res.data\n    })\n   \n    dispatch({ type: ALERT, payload: { success: \"Success! Blog created\" } })\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const getHomeBlogs = () => async (dispatch: Dispatch<IAlertType | IGetHomeBlogsType>) => {\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    const res = await getAPI('home/blogs')\n    \n    dispatch({\n      type: GET_HOME_BLOGS,\n      payload: res.data\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false } })\n\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const getBlogsByCategoryId = (id: string, search: string) => async (dispatch: Dispatch<IAlertType | IGetBlogsCategoryType>) => {\n  try {\n    let limit = 8;\n    let value = search ? search : '?page=1'\n\n    dispatch({ type: ALERT, payload: { loading: true } })\n \n    const res = await getAPI(`blogs/category/${id}${value}&limit=${limit}`) \n    \n    dispatch({\n      type: GET_BLOGS_CATEGORY_ID,\n      payload: {...res.data, id, search}\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false } })\n\n  } catch (err: any) {\n      return  dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const getBlogsByUserId = (id: string, search: string) => async (dispatch: Dispatch<IAlertType | IGetBlogsUserType>) => {\n  try {\n    let limit = 3;\n    let value = search ? search : '?page=1';\n\n    dispatch({ type: ALERT, payload: { loading: true } });\n\n    const res = await getAPI(`blogs/user/${id}${value}&limit=${limit}`);\n\n    dispatch({\n      type: GET_BLOGS_USER_ID,\n      payload: { ...res.data, id, search }\n    });\n\n    dispatch({ type: ALERT, payload: { loading: false } });\n\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\n  }\n}\n\nexport const updateBlog = (blog: IBlog, token: string) => async(dispatch: Dispatch<IAlertType>) => {\n  let url;\n  const result = await checkTokenExp(token,dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    if(typeof(blog.thumbnail) !== 'string'){\n      const photo = await imageUpload(blog.thumbnail)\n      url = photo.url\n    }else{\n      url = blog.thumbnail\n    }\n\n    const newBlog ={...blog, thumbnail: url}\n    \n    const res = await putAPI(`blog/${newBlog._id}`, newBlog, access_token)\n\n    dispatch({ type: ALERT, payload: { success: res.data.msg } })\n\n  } catch(err: any) {\n      return  dispatch({ type:ALERT, payload: { errors: err.response.data.msg }})\n  }\n\n}\n\nexport const deleteBlog = (blog: IBlog, token: string) => async(dispatch: Dispatch<IAlertType | IDeleteBlogsUserType>) => {\n  const result = await checkTokenExp(token,dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({\n      type: DELETE_BLOGS_USER_ID,\n      payload: blog\n    })\n     \n    await deleteAPI(`/blog/${blog._id}`, access_token)\n\n  } catch (err: any) {\n      return dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\nexport const countView = (id?: string) => async(dispatch: Dispatch<IAlertType>) => {\n  try {\n      const res = await getAPI(`blog/${id}`)\n      \n      let view = res.data.views\n\n      await patchAPI(`count_view/${id}`,{views: view + 1})\n      \n  } catch (err: any) {\n      return dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n  }\n}","import jwt_decode from \"jwt-decode\";\nimport { AUTH } from \"../redux/types/authType\";\nimport { getAPI } from \"./FetchDatas\";\n\ninterface IToken {\n    exp: number\n    iat: number\n    id: string\n}\n\nexport const checkTokenExp = async(token: string, dispatch: any) => {\n    const decoded: IToken = jwt_decode(token)\n\n    if(decoded.exp >= Date.now() / 1000) return;\n\n    const res = await getAPI('refresh_token')\n    dispatch({ type: AUTH, payload: res.data })\n    return res.data.access_token;\n}","\n\n\nconst NotFound = () => {\n    return(\n        <div className=\"position-relative\"\n             style={{ minHeight: \"calc(100vh - 70px)\" }}>\n            <h2 className=\"position-absolute text-secondary\"\n                style={{ top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }}>\n                404 | NotFound\n            </h2>\n        </div>\n    )\n}\n\nexport default NotFound;","var map = {\n\t\"./\": 62,\n\t\"./about\": 74,\n\t\"./about.tsx\": 74,\n\t\"./active/[slug]\": 75,\n\t\"./active/[slug].tsx\": 75,\n\t\"./blog/[slug]\": 95,\n\t\"./blog/[slug].tsx\": 95,\n\t\"./blogs/[slug]\": 76,\n\t\"./blogs/[slug].tsx\": 76,\n\t\"./category\": 77,\n\t\"./category.tsx\": 77,\n\t\"./create_blog\": 48,\n\t\"./create_blog.tsx\": 48,\n\t\"./forgot_password\": 89,\n\t\"./forgot_password.tsx\": 89,\n\t\"./index\": 62,\n\t\"./index.tsx\": 62,\n\t\"./jury_members_login\": 96,\n\t\"./jury_members_login.tsx\": 96,\n\t\"./jury_members_register\": 97,\n\t\"./jury_members_register.tsx\": 97,\n\t\"./profile/[slug]\": 94,\n\t\"./profile/[slug].tsx\": 94,\n\t\"./reset_password/[slug]\": 90,\n\t\"./reset_password/[slug].tsx\": 90,\n\t\"./subscription\": 91,\n\t\"./subscription.tsx\": 91,\n\t\"./update_blog/[slug]\": 92,\n\t\"./update_blog/[slug].tsx\": 92,\n\t\"./users\": 98,\n\t\"./users.tsx\": 98,\n\t\"./views\": 93,\n\t\"./views.tsx\": 93\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 139;","import { IBlog } from \"../../utils/TypeScript\";\n\nexport const GET_HOME_BLOGS = \"GET_HOME_BLOGS\"\n\nexport const GET_BLOGS_CATEGORY_ID = \"GET_BLOGS_CATEGORY_ID\"\n\nexport const GET_BLOGS_USER_ID = \"GET_BLOGS_USER_ID\"\n\nexport const CREATE_BLOGS_USER_ID = \"CREATE_BLOGS_USER_ID\"\n\nexport const DELETE_BLOGS_USER_ID = \"DELETE_BLOGS_USER_ID\"\n\n\nexport interface IHomeBlogs {\n    _id: string\n    name: string\n    count: number\n    blogs: IBlog[]\n}\n\nexport interface IGetHomeBlogsType {\n    type: typeof GET_HOME_BLOGS\n    payload: IHomeBlogs[]\n}\n\nexport interface IBlogsCategory {\n    id: string\n    blogs: IBlog[]\n    total: number\n    search: string\n}\n  \nexport interface IGetBlogsCategoryType {\n    type: typeof GET_BLOGS_CATEGORY_ID,\n    payload: IBlogsCategory\n}\n\nexport interface IBlogsUser {\n    id: string\n    blogs: IBlog[]\n    total: number\n    search: string\n}\n  \nexport interface IGetBlogsUserType {\n    type: typeof GET_BLOGS_USER_ID,\n    payload: IBlogsUser\n} \n\nexport interface ICreateBlogsUserType {\n    type: typeof CREATE_BLOGS_USER_ID\n    payload: IBlog\n}\n\nexport interface IDeleteBlogsUserType {\n    type: typeof DELETE_BLOGS_USER_ID\n    payload: IBlog\n}\n\nexport type IBlogUserType =\n| IGetBlogsUserType\n| ICreateBlogsUserType\n| IDeleteBlogsUserType","import { Dispatch } from \"redux\"\nimport { IUserLogin,IUserRegister } from \"../../utils/TypeScript\"\nimport { postAPI,getAPI } from \"../../utils/FetchDatas\"\nimport { AUTH,IAuthType } from '../types/authType'\nimport { ALERT,IAlertType } from \"../types/alertType\"\nimport { validRegister } from \"../../utils/Valid\"\nimport { checkTokenExp } from \"../../utils/checkTokenExp\"\n\n\nexport const login = (userLogin: IUserLogin) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    try {\n        dispatch({ type: ALERT, payload: { loading:true }}) \n\n        const res = await postAPI('login', userLogin)\n\n        dispatch({ type: AUTH, payload: res.data })\n\n        dispatch({ type: ALERT, payload: {success: res.data.msg }})\n        localStorage.setItem('logged', 'Procure') \n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}}) \n    }\n}\n\nexport const register = (userRegister: IUserRegister) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    const check = validRegister(userRegister)\n    if(check.errLength > 0) return dispatch({ type: ALERT, payload: {errors: check.errMsg}});\n    try {\n       dispatch({ type: ALERT, payload:  { loading: true }})\n\n       const res = await postAPI('register', userRegister)\n\n       dispatch({ type: ALERT, payload: { success: res.data.msg }}) \n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}}) \n    }\n}\n\nexport const refreshToken = () => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n\n    const logged = localStorage.getItem('logged')\n    if(logged !== 'Procure') return;\n    try {\n       dispatch({ type: ALERT, payload:  { loading: true }})\n\n       const res = await getAPI('refresh_token')\n        dispatch({type: AUTH, payload: res.data})\n\n       dispatch({ type: ALERT, payload: { }}) \n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}}) \n        localStorage.removeItem('logged')\n    }\n}\n\nexport const logout = (token: string) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n      localStorage.removeItem('logged')\n      dispatch({ type: AUTH, payload: { } })\n      await getAPI('logout', access_token)\n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}}) \n    }\n}\n\nexport const forgotPassword = (email: string) => async(dispatch: Dispatch<IAuthType | IAlertType>) => {\n    try {\n        dispatch({type: ALERT, payload: { loading: true }})\n\n        const res = await postAPI('forgot_password', {email})\n    \n        dispatch({type: ALERT, payload: { success: res.data.msg}})\n    } catch (err: any) {\n        dispatch({type: ALERT, payload: { errors: err.response.data.msg}})\n    }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { IBlog } from \"../../utils/TypeScript\";\nimport { countView } from \"../../redux/actions/blogActions\";\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst SearchCard: React.FC<IProps> = ({blog}) => {\n\n    const dispatch = useDispatch()\n\n    return(\n        <div className=\"card mb-2 bg-transparent\" style={{minWidth: \"260px\"}}>\n            <div className=\"row g-0 p-2\">\n                {/* <div style={{\n                   width:'100px',height:'100px'\n                }}>\n                {\n                    blog.thumbnail && \n                    <>\n                    {\n                        typeof(blog.thumbnail) === 'string'\n                        ? <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                            <img src={blog.thumbnail} \n                            className=\"w-75 h-75\" \n                            alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                        </Link>\n                        :<img src={URL.createObjectURL(blog.thumbnail)} \n                        className=\"w-75 h-75\" \n                        alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                    }\n                    </>\n                }\n                \n                </div> */}\n                \n                <div className=\"col-md-auto\">\n                    <div className=\"card-body\">\n                        <p className=\"card-title\">\n                            <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}\n                            className=\"text-capitalize text-decoration-none\">\n                                {blog.title}\n                            </Link>\n                        </p>\n\n                        <p className=\"card-text text-capitalize\">\n                            <small className=\"text-muted\">\n                                By:\n                                    {\n                                    typeof(blog.user) !== 'string' &&\n                                    <Link to={`/profile/${blog.user._id}`}>\n                                        {blog.user.name}\n                                    </Link>\n                                    }\n                            </small>\n\n                            <small className=\"text-muted ms-5\">\n                                {new Date(blog.createdAt).toDateString()}\n                            </small>\n                        </p>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchCard;","import { useState,useEffect } from 'react'\nimport { getAPI } from '../../utils/FetchDatas';\nimport { IBlog } from '../../utils/TypeScript';\nimport { useLocation } from 'react-router-dom';\nimport SearchCard from '../cards/SearchCard';\n\nconst Search = () => {\n  const [search, setSearch] = useState('')\n  const [blogs, setBlogs] = useState<IBlog[]>([])\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    const delayDebounce = setTimeout(async () => {\n      if(search.length < 2) return setBlogs([]); \n\n      try {\n        const res = await getAPI(`search/blogs?title=${search}`)\n        setBlogs(res.data)\n\n      } catch (err) {\n          console.log(err)\n      } \n    },400)\n\n    return () => clearTimeout(delayDebounce)\n\n  },[search])\n\n  useEffect(() => {\n    setSearch('')\n    setBlogs([])\n  },[pathname])\n\n  return (\n    <div className=\"search position-relative\">\n      <input type=\"text\" className=\"form-control bg-transparent border border-dark w-100\"\n      value={search} placeholder=\"Enter your search...\"\n      onChange={e => setSearch(e.target.value)}  />\n\n      {\n        search.length >= 2 &&\n        <div className=\"position-absolute pt-2 px-1 w-100 rounded\" \n        style={{background:'#F2F6FF', zIndex: 10,\n                maxHeight:'calc(100vh - 100px)', overflow:'auto'}}>\n            {\n              blogs.length \n              ? blogs.map(blog => (\n                <SearchCard key={blog._id} blog={blog} />\n              ))\n              : <h3 className=\"text-center text-dark\">Looks like no result found for your search</h3>\n            }\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Search\n","import { useSelector,useDispatch } from 'react-redux'\nimport { Link,useLocation } from 'react-router-dom'\nimport { RootStore } from '../../utils/TypeScript'\nimport { logout } from '../../redux/actions/authActions'\n\n\nconst Menu = () => {\n  const { auth,categories } = useSelector((state: RootStore) => state)\n\n  const { pathname } = useLocation()\n\n  const dispatch = useDispatch()\n\n  const isActive = (pn: string) => {\n    if(pn === pathname) return 'activated'\n    \n  }\n\n  const handleLogout = () => {\n    if(!auth.user || !auth.access_token) return;\n    dispatch(logout(auth.access_token))\n  }\n\n  return (\n      // <ul className=\"navbar-nav mt-0 ms-lg-4\">\n      <ul className='navbar-nav mb-2 mb-lg-0 navbar-brand'>\n        {\n          categories.map(label => (\n            <li key={label._id} className={`nav-item ${isActive(`/blogs/${label.name}`)} mx-2`}>\n              <Link className=\"nav-link m-2 p-0 text-capitalize text-dark\" to={`/blogs/${label.name}`}>{label.name}</Link>\n            </li>\n          ))\n        }\n    \n        {\n          auth.user && \n          <li className=\"nav-item dropdown\">\n            <span className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <img src={auth.user.avatar} alt=\"avatar\" className=\"avatar\" />\n            </span>\n\n            <ul className=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\n              { \n                auth.user.role !== 'user' &&\n                  <li>\n                    <Link className=\"dropdown-item\" to={`/create_blog`}>CreateBlog</Link>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n              }\n\n              {\n                auth.user?.role === \"admin\" &&\n                <>\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/jury_members_register\">Register Writer</Link>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/category\">Category</Link>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <Link className='dropdown-item' to={`/users`}>\n                      Writers\n                    </Link>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/subscription\">Subscribers</Link>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <Link className='dropdown-item' to={'/views'}>\n                      Blogs\n                    </Link>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n                </>\n              }\n              \n              <li>\n                <Link className=\"dropdown-item\" to={`/profile/${auth.user._id}`}>\n                  Profile\n                </Link>\n              </li>\n              <li><hr className=\"dropdown-divider\" /></li>\n              <li>\n                <Link className=\"dropdown-item\" to=\"/\" onClick={handleLogout} >\n                  Logout\n                </Link>\n              </li>\n            </ul>\n          </li>\n        }\n      </ul>\n\n \n  )\n}\n\nexport default Menu;\n","import { Link } from 'react-router-dom'\nimport Search from './Search'\nimport Menu from './Menu'\n\nconst Header = () => {\n\n  return (\n    <nav className=\"navbar navbar_glass navbar-expand-lg p-2 border-bottom\"\n         style={{position: 'sticky', top:0, left:0, zIndex:9}}>\n            <div className=\"container-fluid\">\n              <Link className=\"navbar-brand me-5\" to=\"/\">TIPSAZA</Link>\n                <button className=\"navbar-toggler navbar-light\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <Menu />\n                    <form className=\"ms-lg-auto\" style={{maxWidth:'25rem',width:'100%'}}>\n                       <Search />\n                    </form>\n                </div>\n            </div>\n        </nav>\n  )\n}\n\nexport default Header","import React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { IParams } from \"./utils/TypeScript\";\nimport NotFound from './components/global/NotFound';\n\n\nconst generatePage = (name:any) => {\n    const component = () => require(`./pages/${name}`).default //takes 'name from PageRender and the search for the path \n                                                               //like './pages/register if found try block if not catch block\n    try {\n        return React.createElement(component())\n    } catch (err) {\n        return <NotFound />\n    }\n}\n\nconst PageRender = () => {\n\n    const { page,slug } : IParams = useParams()\n\n    let name = '';\n\n    if(page) {\n        name = slug ? `${page}/[slug]` : `${page}` // `${page}/[slug]` here the [slug] actually represents the [slug] named files like slug.tsx\n    }                                              //and page represents the name of the folder that stores tha [slug] \n                                                   //so everything that has [slug] has a folder that represents the page in url\n    return generatePage(name)\n}\n\nexport default PageRender;","import { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n    return(\n        <div className=\"home__container-lowercontent_footer\">\n            {/* <img src=\"/logowhite.svg\" alt=\"logo\"/> */}\n            <h1>Tipsaza</h1>\n            <div className=\"text-center\">\n                <p> \n                    <Link to='/about'>About</Link> | <Link to='#'>Contact</Link> | <Link to='/blogs/tips'>Tips</Link> | <Link to=''>Sitemap</Link> \n                </p>\n                <small>© 2022 Tipsaza® All rights reserved.</small>\n            </div>\n             <div className=\"d-flex\" style={{fontSize: '20px', cursor: 'pointer'}}>\n                <p className=\"me-3\"><i className=\"fab fa-brands fa-facebook\" /></p>\n                <p className=\"mx-3\"><i className=\"fab fa-brands fa-twitter-square\" /></p>\n                <p className=\"mx-3\"><i className=\"fab fa-brands fa-linkedin\" /></p>\n            </div>\n        </div> \n    )\n}\n\nexport default Footer;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/global/Header';\nimport PageRender from './PageRender';\nimport { Alert } from './components/alert/Alert';\nimport { refreshToken } from './redux/actions/authActions';\nimport { getCategories } from './redux/actions/categoryActions';\nimport { getHomeBlogs } from './redux/actions/blogActions';\n\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Footer from './components/global/Footer';\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(refreshToken())\n    dispatch(getCategories())\n    dispatch(getHomeBlogs())\n  },[dispatch])\n  \n  return (\n    <>\n        <Router>\n          <Alert/>\n          <Header/>\n\n          <Switch>\n            <Route exact path='/' component={PageRender}/>\n            <Route exact path='/:page' component={PageRender}/>\n            <Route exact path='/:page/:slug' component={PageRender}/>\n          </Switch>\n\n          <Footer/>\n        </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { AUTH,IAuthType,IAuth } from \"../types/authType\";\n\n\nconst authReducer = ( state: IAuth= {}, action:IAuthType ) : IAuth => {\n    switch (action.type) {\n        case AUTH:\n            return action.payload\n        default:\n            return state   \n    }\n}\n\nexport default authReducer;","import { ALERT,IAlertType } from '../types/alertType'\nimport { IAlert } from '../../utils/TypeScript'\n\n\nconst alertReducer = ( state: IAlert= {}, action:IAlertType ) : IAlert => {\n    switch (action.type) {\n        case ALERT:\n            return action.payload\n        default:\n            return state   \n    } \n}\n\nexport default alertReducer;","import * as type from \"../types/categoryType\"\nimport { ICategory } from \"../../utils/TypeScript\"\n\n\nconst categoryReducer = ( state: ICategory[] = [], action: type.ICategoryType ) : ICategory[] => {\n    switch (action.type) {\n        case type.CREATE_CATEGORY:\n            return [action.payload, ...state]\n\n        case type.GET_CATEGORIES:\n            return action.payload\n        \n        case type.UPDATE_CATEGORY:\n            return state.map((item) => (\n                item._id === action.payload._id\n                ? {...item, name: action.payload.name}\n                : item\n            ))\n        \n        case type.DELETE_CATEGORY:\n            return state.filter(item => item._id !== action.payload)\n\n        default:\n           return state;\n    }\n}\n\nexport default categoryReducer;","import { IHomeBlogs,GET_HOME_BLOGS,IGetHomeBlogsType } from \"../types/blogType\";\n\n\n\nconst homeBlogsReducer = (state: IHomeBlogs[] = [], action: IGetHomeBlogsType ):IHomeBlogs[] => {\n    switch (action.type) {\n        case GET_HOME_BLOGS:\n            return action.payload\n    \n        default:\n            return state\n    }\n}\n\n\nexport default homeBlogsReducer;","import { GET_BLOGS_CATEGORY_ID, IBlogsCategory, IGetBlogsCategoryType } from \"../types/blogType\";\n\n\n\nconst blogsCategoryReducer = ( state: IBlogsCategory[] = [], action: IGetBlogsCategoryType ): IBlogsCategory[] => {\n    switch (action.type) {\n        case GET_BLOGS_CATEGORY_ID:\n            if(state.every(item => item.id !== action.payload.id)){\n                return [...state, action.payload]\n            }else{\n                return state.map(blog => (\n                    blog.id === action.payload.id\n                    ? action.payload\n                    : blog\n                )) \n            }\n            \n    \n        default:\n            return state;\n    }\n}\n\n\nexport default blogsCategoryReducer;","import { IUser } from \"../../utils/TypeScript\";\nimport { GET_OTHER_INFO, IGetOtherInfoType } from \"../types/profileType\";\n\n\n\nconst otherInfoReducer = (state: IUser[] = [], action: IGetOtherInfoType): IUser[] => {\n    switch (action.type) {\n        case GET_OTHER_INFO: \n            return [...state, action.payload]\n    \n        default:\n            return state\n    }\n}\n\n\nexport default otherInfoReducer;","import { IUser } from \"../../utils/TypeScript\";\nimport { CREATE_BLOGS_USER_ID, DELETE_BLOGS_USER_ID, GET_BLOGS_USER_ID, IBlogsUser, IBlogUserType } from \"../types/blogType\";\n\n\n\nconst blogsUserReducer = (state: IBlogsUser[] = [], action:IBlogUserType): IBlogsUser[] =>{\n    switch (action.type) {\n        case GET_BLOGS_USER_ID:\n            if(state.every(item => item.id !== action.payload.id)) {\n                return [...state, action.payload]\n            }else {\n                return state.map(item => (\n                    item.id === action.payload.id\n                    ? action.payload\n                    : item\n                ))\n            }\n            \n        case CREATE_BLOGS_USER_ID:\n            return state.map(item => (\n                item.id === (action.payload.user as IUser)._id \n                ? {\n                    ...item,\n                    blogs: [action.payload, ...item.blogs]\n                }\n                : item\n            )) \n\n        case DELETE_BLOGS_USER_ID:\n            return state.map(item => (\n                item.id === (action.payload.user as IUser)._id\n                ? {\n                    ...item,\n                    blogs: item.blogs.filter(blog => (\n                        blog._id !== action.payload._id\n                    ))\n                }\n                : item\n            ))    \n            \n        default:\n           return state\n    }\n}\n\n\nexport default blogsUserReducer;","import { IUser } from \"../../utils/TypeScript\";\nimport { DELETE_USER, GET_USERS, IUsersType } from \"../types/usersType\";\n\n\nconst usersReducer = (state: IUser[] = [], action: IUsersType): IUser[] => {\n    switch (action.type) {\n        case GET_USERS:\n            return action.payload\n\n        case DELETE_USER:\n            return state.filter(item => item._id !== action.payload)\n\n        default:\n            return state\n    }\n}\n\nexport default usersReducer;","import { ISubscriber } from \"../../utils/TypeScript\";\nimport { DELETE_EMAIL, GET_EMAILS, ISubscribeType } from \"../types/subscriptionType\";\n\n\n\nconst subscriptionReducer = (state: ISubscriber[] = [] ,action: ISubscribeType) : ISubscriber[] => {\n    switch (action.type) {\n        case GET_EMAILS:\n            return action.payload\n    \n        case DELETE_EMAIL:\n            return state.filter(item => item._id !== action.payload)\n\n        default:\n            return state\n    }\n}   \n\nexport default subscriptionReducer;","import { combineReducers } from \"redux\";\nimport auth from './authReducer'\nimport alert from './alertReducer'\nimport categories from './categoryReducer'\nimport homeBlogs from './homeBlogsReducer'\nimport blogsCategory from './blogsCategoryReducer'\nimport otherInfo from './otherInfoReducer'\nimport blogsUser from './blogsUserReducer'\nimport users from './usersReducer'\nimport subscribers from './subscriptionReducer'\n\nexport default combineReducers({\n    auth,\n    alert,\n    categories,\n    homeBlogs,\n    blogsCategory,\n    otherInfo,\n    blogsUser,\n    users,\n    subscribers\n})","import { createStore,applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from './reducers/index'\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { IUserRegister,IBlog } from './TypeScript'\n\nexport const validRegister = (userRegister: IUserRegister) => {\n  const { name, email, password, cf_password } = userRegister;\n  const errors: string[] = [];\n\n  if(!name){\n    errors.push(\"Please add your name.\")\n  }else if(name.length > 20){\n    errors.push(\"Your name is up to 20 chars long.\")\n  }\n\n  if(!email){\n    errors.push(\"Please add your email\")\n  }else if(!validPhone(email) && !validateEmail(email)){\n    errors.push(\"Invalid Email\")\n  }\n\n  const msg = checkPassword(password, cf_password)\n  if(msg) errors.push(msg)\n\n  return {\n    errMsg: errors,\n    errLength: errors.length\n  }\n}\n\n\nexport const checkPassword = (password: string, cf_password: string) => {\n  if(password.length < 6){\n    return(\"Password must be at least 6 character long.\")\n  }else if(password !== cf_password){\n    return(\"Password did not match.\")\n  }\n}\n\n\nexport function validPhone(phone: string) {\n  const re = /^[+]/g\n  return re.test(phone)\n}\n\nexport function validateEmail(email: string) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\n//Valid Blog\n\nexport const validCreateBlog = ({\n  title,content,description,thumbnail,category\n}: IBlog) => {\n\n  const err: string[] = []\n\n  if(title.trim().length < 10) {\n    err.push(\"Title should atleast be 10 chars\")\n  }else if(title.trim().length > 100) {\n    err.push(\"Title shouldn't exceed 100 chars\")\n  }\n\n  if(content.trim().length < 500) {\n    err.push(\"Your content should be atleast 500 chars\")\n  }\n\n  if(description.trim().length < 50) {\n    err.push(\"Description should atleast be 50 chars\")\n  }else if(description.trim().length > 200) {\n    err.push(\"Description shouldn't exceed 200 chars\")\n  }\n\n  if(!thumbnail) {\n    err.push(\"Thumbnail cannot be left blank\")\n  }\n\n  if(!category) {\n    err.push(\"Category cannot be left blank\")\n  }\n\n  return {\n    errMsg: err,\n    errLength: err.length\n  }\n\n}\n\n//Shallow Equality\n\nexport const shallowEqual = (object1: any, object2: any) => {\n  const key1 = Object.keys(object1)\n  const key2 = Object.keys(object2) \n\n  if(key1.length !== key2.length) {\n    return false;\n  }\n\n  for(let key of key1) {\n    if(object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n  return true;\n} ","\n\n\nconst Loading = () => {\n    return(\n        <div className=\"d-flex justify-content-center my-4\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading;","import { IUser } from \"../../utils/TypeScript\"\n\nexport const AUTH = 'AUTH'\n\nexport interface IAuth {\n    msg?: string\n    access_token?: string\n    user?: IUser\n}\n\nexport interface IAuthType {\n    type: typeof AUTH\n    payload: IAuth\n}\n","import { ICategory } from '../../utils/TypeScript'\n\n\nexport const CREATE_CATEGORY = 'CREATE_CATEGORY'\n\nexport const GET_CATEGORIES = 'GET_CATEGORIES'\n\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY'\n\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\n\nexport interface ICreateCategory {\n    type: typeof CREATE_CATEGORY\n    payload: ICategory\n}\n\nexport interface IGetCategories {\n    type: typeof GET_CATEGORIES\n    payload: ICategory[]\n}\n\nexport interface IUpdateCategory {\n    type: typeof UPDATE_CATEGORY \n    payload: ICategory\n}\n\nexport interface IDeleteCategory {\n    type: typeof DELETE_CATEGORY\n    payload: string\n}\n\nexport type ICategoryType = \n| ICreateCategory \n| IGetCategories\n| IUpdateCategory\n| IDeleteCategory","export const checkImage = (file: File) => {\n    const types = ['image/png', 'image/jpeg'] \n\n    let err = '';\n\n    if(!file) return err = 'File does not exist!'\n\n    if(file.size > 2048 * 2048) return err = 'Too large file!'\n\n    if(!types.includes(file.type)) return err = 'Image format is invalid!'\n        \n    return err;\n}\n\n\nexport const imageUpload = async (file: File) => {\n    const formData = new FormData()\n    formData.append('file',file)\n    formData.append('upload_preset','b20m1fqi')\n    formData.append('cloud_name','dpra6ghs3')\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/dpra6ghs3/upload',{\n        method: 'POST',\n        body: formData\n    })\n\n    const data = await res.json()\n    return { public_id: data.public_id, url: data.secure_url};\n}\n","import { Dispatch } from \"redux\";\nimport { AUTH, IAuth, IAuthType } from \"../types/authType\"\nimport { ALERT, IAlertType } from \"../types/alertType\";\nimport { GET_OTHER_INFO, IGetOtherInfoType } from \"../types/profileType\";\nimport { checkImage,imageUpload } from \"../../utils/ImageUpload\";\nimport { getAPI, patchAPI } from \"../../utils/FetchDatas\";\nimport { checkPassword } from \"../../utils/Valid\";\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\n\n\nexport const updateUser = (avatar: File, name: string, auth: IAuth) => async (dispatch: Dispatch<IAlertType | IAuthType>) => {\n    if(!auth.access_token || !auth.user) return;\n\n    let url = '';\n    const result = await checkTokenExp(auth.access_token,dispatch)\n    const access_token = result ? result : auth.access_token\n    try {\n        dispatch({type: ALERT, payload: {loading:true}}) \n\n        if(avatar) {\n            const check = checkImage(avatar) //just checking the requirements\n            if(check) {\n                return dispatch({ type: ALERT, payload: { errors: check}})\n            }\n\n            const photo = await imageUpload(avatar)\n            url = photo.url\n        }\n\n        dispatch({\n            type: AUTH, \n            payload: {\n                access_token: auth.access_token,\n                user: {\n                    ...auth.user,\n                    avatar: url ? url : auth.user.avatar,\n                    name : name ? name : auth.user.name\n                }\n        } })\n\n        const res = await patchAPI('user',{ \n            avatar: url ? url : auth.user.avatar,\n            name : name ? name : auth.user.name\n        }, access_token)\n\n        dispatch({type: ALERT, payload: { success: res.data.msg }}) \n\n    } catch (err: any) {\n       dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}\n\nexport const resetPassword = (password: string, cf_password: string, token: string) => async (dispatch: Dispatch<IAlertType | IAuthType>) => {\n    const msg = checkPassword(password, cf_password)\n    if(msg) return dispatch({ type:ALERT, payload: { errors: msg }})\n\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({ type: ALERT, payload: { loading: true}})\n        \n        const res = await patchAPI('/reset_password', { password }, access_token)\n\n        dispatch({ type: ALERT, payload: { success: res.data.msg}})\n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg}})\n    }\n}\n\nexport const getOtherInfo = (id: string) => async (dispatch: Dispatch<IAlertType | IGetOtherInfoType>) => {\n\n    try {\n        dispatch({ type: ALERT, payload: { loading: true}})\n        \n        const res = await getAPI(`user/${id}`)\n\n        dispatch({\n            type: GET_OTHER_INFO,\n            payload: res.data\n        })\n\n        dispatch({ type: ALERT, payload: { }})\n\n    } catch (err: any) {\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg}})\n    }\n}","\n\nconst Loading = () => {\n    return(\n        <div className=\"position-fixed w-100 h-100 text-center loading\"\n             style={{background:'#0007', color:'white', top:0, left:0, zIndex:999}}>\n                 <svg width='205' height='250' viewBox='0 0 40 50'>\n                    <polygon stroke='#fff' strokeWidth='1' fill='none' points='20,1 40,40 1,40' />\n                    <text fill='#fff' x='5' y='47'>Loading</text>\n                 </svg>\n        </div>\n    )\n}\n\nexport default Loading;","import { ALERT } from '../../redux/types/alertType'\nimport { useDispatch } from 'react-redux'\nimport { useCallback, useEffect } from 'react'\n\ninterface IProps {\n    title: string\n    body: string | string[]\n    bgColor: string\n  }\n  \nconst Toast = ({title, body, bgColor}: IProps) => {\n   const dispatch = useDispatch()\n\n   const handleClose = useCallback(() => {\n    dispatch({ type: ALERT, payload: {} })\n  },[dispatch])\n  \n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      handleClose()\n    },2000)\n\n    return () => clearTimeout(delayDebounce)\n  },[handleClose])\n\n    \n  \n    return (\n\n      <div className={`toast show position-fixed text-light ${bgColor}`}\n      style={{top: '5px', right: '5px', zIndex: 50, minWidth: '200px'}}>\n  \n        <div className={`toast-header text-light ${bgColor}`}>\n          <strong className=\"me-auto\">{title}</strong>\n          <button type=\"button\" className=\"btn-close\" \n          data-bs-dismiss=\"toast\" aria-label=\"Close\"\n          onClick={handleClose} />\n        </div>\n  \n        <div className=\"toast-body\">\n          {\n            typeof(body) === 'string'\n            ? body\n            : <ul>\n              {\n                body.map((text, index) => (\n                  <li key={index}>{text}</li>\n                ))\n              }\n            </ul>\n          }\n        </div>\n  \n      </div>\n    )\n  }\n\nexport default Toast;","import { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../utils/TypeScript\";\nimport Loading from \"./Loading\";\nimport Toast from \"./Toast\";\n\nexport const Alert = () => {\n    const { alert } = useSelector((state: RootStore) => state)\n\n    return(\n        <div>\n            {alert.loading && <Loading/>}\n\n            { \n                alert.errors && \n                <Toast \n                title=\"Errors\"\n                body={alert.errors}\n                bgColor=\"bg-danger\"\n                />\n            }\n\n            { \n                alert.success && \n                <Toast \n                title=\"Success\"\n                body={alert.success}\n                bgColor=\"bg-success\"\n                />\n            }\n        </div>\n    )\n}\n\nexport const showErrMsg = (msg: string) => {\n    return <div className=\"errMsg\">{msg}</div>\n}\n\nexport const showSuccessMsg = (msg: string) => {\n    return <div className=\"successMsg\">{msg}</div>\n}","import React,{ useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\ninterface IProps {\n    total: number\n    callback: (num: number) => void\n}\n\nconst Pagination: React.FC<IProps> = ({ total,callback }) => {\n\n    const [ page,setPage ] = useState(1)\n\n    const history = useHistory()\n\n    const newArray = [...Array(total)].map((_,i) => i + 1)\n    \n    const isActive = (index: number) => {\n        if( index === page ) return \"active\";\n        return \"\"\n    }\n\n    const handlePagination = (num: number) => {\n        history.push(`?page=${num}`)\n        callback(num)\n    }\n\n    useEffect(() => {\n        const num = history.location.search.slice(6) || 1\n        setPage(Number(num))\n    },[history.location.search])\n\n    return(\n        <nav aria-label=\"Page navigation example\" style={{cursor:'pointer'}}>\n            <ul className=\"pagination\">\n\n                {\n                    page > 1 && \n                    <li className=\"page-item\">\n                        <span className=\"page-link\" aria-label=\"Previous\" onClick={() => handlePagination( page - 1 )} >\n                            <span aria-hidden=\"true\">&laquo;</span>\n                        </span>\n                    </li>\n                }\n                \n\n                {\n                    newArray.map(num => (\n                        <li key={num} className={`page-item ${isActive(num)}`} onClick={() => handlePagination(num)}>\n                            <span className=\"page-link\" >{num}</span>\n                        </li>\n                    ))\n                }\n                \n\n                {\n                    page < total &&\n                    <li className=\"page-item\">\n                        <span className=\"page-link\" aria-label=\"Next\" onClick={() => handlePagination( page + 1)}>\n                            <span aria-hidden=\"true\">&raquo;</span>\n                        </span>\n                    </li>\n                }\n                \n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination;","import { ISubscriber } from \"../../utils/TypeScript\"\n\nexport const GET_EMAILS = \"GET_EMAILS\"\nexport const DELETE_EMAIL = \"DELETE_EMAIL\"\n\nexport interface IGetEmailsType {\n    type: typeof GET_EMAILS\n    payload: ISubscriber[]\n}\n\nexport interface IDeleteEmailType {\n    type: typeof DELETE_EMAIL\n    payload: string\n}\n\nexport type ISubscribeType =\n| IGetEmailsType\n| IDeleteEmailType","import { Dispatch } from \"redux\";\nimport { IAlertType, ALERT} from \"../types/alertType\";\n\nimport {\n    CREATE_CATEGORY,\n    ICategoryType,\n    GET_CATEGORIES,\n    UPDATE_CATEGORY,\n    DELETE_CATEGORY\n} from \"../types/categoryType\";\n\nimport { postAPI,getAPI,patchAPI,deleteAPI } from \"../../utils/FetchDatas\";\nimport { ICategory } from \"../../utils/TypeScript\";\nimport { checkTokenExp } from '../../utils/checkTokenExp'\n\nexport const createCategory = (name: string, token: string) => async(dispatch: Dispatch<IAlertType |ICategoryType>) => {\n  const result = await checkTokenExp(token, dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({ type: ALERT, payload: { loading: true }})\n\n    const res = await postAPI('category', { name }, access_token)\n\n    dispatch({\n      type:CREATE_CATEGORY,\n      payload: res.data.newCategory\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false }})\n  } catch (err: any) {\n      // dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\n  }\n}\n\nexport const getCategories = () => async (dispatch: Dispatch<IAlertType |ICategoryType>) => {\n    try {\n        dispatch({ type: ALERT, payload:{ loading: true}})\n\n        const res = await getAPI('category')\n        dispatch({\n            type:GET_CATEGORIES,\n            payload: res.data.categories\n        })\n\n        dispatch( { type: ALERT, payload: { loading: false }})\n    } catch (err: any) {\n        // dispatch({ type: ALERT, payload: { errors: err.response.data.msg} })\n    }\n}\n\nexport const updateCategory = (data: ICategory, token: string) => async (dispatch: Dispatch<IAlertType |ICategoryType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    try {\n\n        dispatch({ type:UPDATE_CATEGORY, payload: data })\n\n        await patchAPI(`category/${data._id}`, { \n        name: data.name \n    }, access_token)\n\n  } catch (err: any) {\n    // dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\n  }\n}\n\nexport const deleteCategory = (id: string, token: string) => async (dispatch: Dispatch<IAlertType |ICategoryType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n   \n    try {\n        dispatch({type:DELETE_CATEGORY, payload: id})\n        await deleteAPI(`category/${id}`,access_token)\n    } catch (err: any) {\n        // dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}","import { IUser } from \"../../utils/TypeScript\";\n\nexport const GET_USERS = \"GET_USERS\"\nexport const DELETE_USER = \"DELETE_USER\"\nexport const UPDATE_USER = \"UPDATE_USER\"\n\nexport interface IGetUsersType {\n    type: typeof GET_USERS\n    payload: IUser[]\n}\n\nexport interface IDeleteUserType {\n    type: typeof DELETE_USER\n    payload: string\n}\n\nexport interface IUpdateUserType {\n    type: typeof UPDATE_USER\n    payload: string\n}\n\nexport type IUsersType =\n| IGetUsersType\n| IDeleteUserType\n| IUpdateUserType","import { IAlert } from \"../../utils/TypeScript\"\n\nexport const ALERT = 'ALERT'\n\nexport interface IAlertType {\n    type: typeof ALERT\n    payload: IAlert\n}\n\n\n","import { Dispatch } from \"redux\";\nimport { postAPI,deleteAPI,getAPI } from \"../../utils/FetchDatas\";\nimport { validateEmail } from \"../../utils/Valid\";\nimport { ALERT, IAlertType } from \"../types/alertType\";\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\nimport { DELETE_EMAIL, GET_EMAILS, ISubscribeType } from \"../types/subscriptionType\";\n\n\n\nexport const postEmail = (email: string) => async (dispatch: Dispatch<IAlertType>) => {\n    const check = validateEmail(email)\n    if(!check) return dispatch({type: ALERT, payload: {errors: \"Please enter a valid email!\"}})\n    try {\n        \n        await postAPI('subscribe',{email})\n\n        dispatch({\n            type: ALERT,\n            payload: { success: \"Congrats! See ya in your inbox\"}\n        })\n\n    } catch (err: any) {\n        dispatch({\n            type: ALERT,\n            payload: { errors: err.response.data.msg}\n        })\n    }\n}\n\nexport const getEmails = (token:string) => async (dispatch: Dispatch<IAlertType | ISubscribeType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({type: ALERT, payload:{loading:true}})\n\n        const res = await getAPI('subscribe',access_token)\n\n        dispatch({\n            type: GET_EMAILS,\n            payload: res.data\n        })\n        \n        dispatch({type:ALERT, payload:{loading:false}})\n    } catch (err:any) {\n        dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}\n\nexport const deleteEmail = (id:string,token:string) => async (dispatch: Dispatch<IAlertType | ISubscribeType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({type:DELETE_EMAIL,payload:id})\n        await deleteAPI(`subscribe/${id}`,access_token)\n\n    } catch (err:any) {\n        dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}","import { useSelector } from \"react-redux\";\nimport { IAuth } from '../../redux/types/authType';\nimport { RootStore,InputChange } from \"../../utils/TypeScript\";\nimport { IBlog } from '../../utils/TypeScript'\n\n\ninterface IProps {\n    blog: IBlog,\n    setBlog: (blog: IBlog) => void,\n    auth: IAuth\n}\n\nconst CreateForm: React.FC<IProps> = ({blog, setBlog }) => {\n    \n    const { categories } = useSelector((state: RootStore) => state)\n\n    const handleChangeInput = (e: InputChange) => {\n        const { name,value } = e.target\n        setBlog({...blog, [name]:value})\n    }\n\n    const handleChangeThumbnail = (e: InputChange) => {\n        const target = e.target as HTMLInputElement\n        const files = target.files\n\n        if(files) {\n            const file = files[0]\n            setBlog({...blog,thumbnail:file})\n        }\n    }\n\n    return(\n        <form>\n            <div className=\"form-group position-relative\">\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    value={blog.title} name=\"title\"\n                    onChange={handleChangeInput}\n                    placeholder= \"Title\"\n                     />\n                <small className=\"text-muted position-absolute\" style={{bottom:'8px', right:'3px', opacity:'0.3'}}>\n                    {blog.title.length}/100\n                </small>\n            </div>\n\n            <div className=\"form-group my-3\">\n                <input type=\"file\" className=\"form-control\"  accept=\"image/*\" onChange={handleChangeThumbnail}/>\n            </div>\n        \n            <div className=\"form-group position-relative\">\n                <textarea \n                    className=\"form-control\" \n                    rows={4} style={{resize:'none'}}\n                    value={blog.description} name=\"description\"\n                    placeholder= \"Description\"\n                    onChange={handleChangeInput} />\n                \n                <small className=\"text-muted position-absolute\" style={{bottom:0, right:'3px', opacity:'0.3'}}>\n                     {blog.description.length}/200\n                </small>\n            </div>\n        \n            <div className=\"form-group my-3\">\n                <select \n                    className=\"form-control text-capitalize bg-dark text-light w-25\" \n                    value={blog.category} name=\"category\" \n                    onChange={handleChangeInput} >\n                    <option value=\"\">Choose Category</option>\n                    {\n                        categories.map((category) => (\n                            <option key={category._id} value={category._id}>\n                                {category.name}\n                            </option>\n                        ))\n                    }\n                </select>\n            </div>\n        </form>\n    )\n}\n\nexport default CreateForm;","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { ALERT } from '../../redux/types/alertType';\nimport { checkImage, imageUpload } from '../../utils/ImageUpload';\n\n\n\ninterface IProps {\n    setBody: (value: string) => void\n    body: string\n}\n\nconst Quill: React.FC<IProps> = ({ setBody,body }) => {\n    const quillRef = useRef<ReactQuill>(null)\n\n    const dispatch = useDispatch()\n\n    const modules = { toolbar: { container }}\n\n    //Custom image\n\n    const handleChangeImage = useCallback(() => {\n        const input = document.createElement('input')\n        input.type = 'file'\n        input.accept = 'image/*'\n        input.click()\n\n        input.onchange = async () => {\n            const files = input.files\n            if(!files) return dispatch({\n                type: ALERT,\n                payload: { errors: \"File does not exist\"}\n            });\n\n            const file = files[0]\n            const check = checkImage(file)\n            if(check) return dispatch({\n                type: ALERT,\n                payload: { errors: check }\n            });\n            \n            dispatch({type: ALERT, payload: { loading: true }})\n            const photo = await imageUpload(file)\n            const quill = quillRef.current;\n            const range = quill?.getEditor().getSelection()?.index\n\n            if(range !== undefined) {\n                quill?.getEditor().insertEmbed(range,'image',`${photo.url}`)\n            }\n\n            dispatch({type: ALERT, payload: { loading: false }})\n        }\n    },[dispatch])\n\n    useEffect(() => {\n        const quill = quillRef.current;\n        if(!quill) return;\n\n        let toolbar = quill.getEditor().getModule('toolbar')\n        toolbar.addHandler('image', handleChangeImage)\n    },[handleChangeImage])\n\n    return (\n        <div>\n            <ReactQuill \n                theme=\"snow\" \n                modules={modules} \n                placeholder=\"Write something...\" \n                onChange={(e) => setBody(e)}\n                value={body}\n                ref={quillRef} />\n        </div>\n    )\n}\n\nlet container = [\n    [{ 'font': [] }],\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n  \n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n    ['blockquote', 'code-block'],\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n  \n    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n    [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n    [{ 'direction': 'rtl' }],                         // text direction\n    [{ 'align': [] }],\n  \n    ['clean', 'link', 'image','video']\n  ]\n\n\nexport default Quill;","import React,{ useState,useRef, useEffect } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport NotFound from \"../components/global/NotFound\";\nimport { RootStore,IBlog, IUser } from \"../utils/TypeScript\";\nimport CardHoriz from \"../components/cards/CardHoriz\";\nimport CreateForm from \"../components/cards/CreateForm\";\nimport ReactQuill from \"../components/editor/ReactQuill\";\nimport { validCreateBlog } from \"../utils/Valid\";\nimport { ALERT } from \"../redux/types/alertType\";\nimport { createBlog,updateBlog } from \"../redux/actions/blogActions\";\nimport { getAPI } from \"../utils/FetchDatas\";\nimport { shallowEqual } from '../utils/Valid'\n\ninterface IProps{\n    id?: string\n}\n\nconst CreateBlog: React.FC<IProps> = ({id}) => {\n\n    const initState = {\n        user: '',\n        title: '',\n        content: '',\n        description: '',\n        thumbnail: '',\n        category: '',\n        views: 0,\n        createdAt: new Date().toISOString()\n    }\n\n    const { auth } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n\n    const [ blog,setBlog ] = useState<IBlog>(initState)\n    const [ body,setBody ] = useState('')\n    const [ text,setText ] = useState('')\n    const [ oldData,setOldData ] = useState<IBlog>(initState)\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {  //before using useEffect id was console.logged many times but now it consoles one time only\n        if(!id) return;\n\n        getAPI(`blog/${id}`)  //get api is getting all the datas from the particular id\n        .then(res => {\n            setBlog(res.data)\n            setBody(res.data.content)\n            setOldData(res.data)\n        })\n        .catch(err => console.log(err))\n\n        const initData = {\n            user: '',\n            title: '',\n            content: '',\n            description: '',\n            thumbnail: '',\n            category: '',\n            views: 0,\n            createdAt: new Date().toISOString()\n        }\n\n        return () => {\n            setBlog(initData)\n            setBody('')\n            setOldData(initData)\n        }\n        \n    },[id])\n\n    useEffect(() => {\n        const div = divRef.current;\n        if(!div) return\n\n        const text = (div?.innerText as string)\n        setText(text)\n    },[body])   //means whenever the body changes re-render the component\n\n    const handleSubmit = async () => {\n        if(!auth.access_token) return;\n\n        const check = validCreateBlog({ ...blog, content:text})\n        if(check.errLength !== 0) return dispatch({type: ALERT, payload: {errors: check.errMsg}})\n        \n        let newData = {...blog, content: body}\n\n        if(id) {\n            if((blog.user as IUser)._id === auth.user?._id || auth.user?.role === 'admin') {\n                dispatch(updateBlog(newData, auth.access_token))\n            } else {\n                return dispatch({\n                    type: ALERT,\n                    payload: { errors: \"Invalid Authentication\"}\n                })\n            }\n\n\n            const result = shallowEqual(oldData, newData)\n            if(result) return dispatch({\n                type: ALERT,\n                payload: { errors: \"The Data has not been\"}\n            })\n\n            setBlog(initState)\n            setBody('')\n        }else{\n            dispatch(createBlog(newData, auth.access_token))\n            setBlog(initState)\n            setBody('')\n        }\n    }\n\n    if(!auth.access_token || !auth.user) return <NotFound />\n    return(\n        <div className=\"container my-4\">\n            <h2 className=\"text-secondary\">Create Blog</h2>\n            <div className=\"row mt-4\">\n                <div className=\"col-md-6\">\n                    <h5>Create</h5>\n                    <CreateForm auth={auth} blog={blog} setBlog={setBlog} />\n                </div>\n\n                <div className=\"col-md-6 \">\n                    <h5>Preview</h5>\n                    <CardHoriz blog={blog}/>\n                </div>\n            </div>\n            <div>\n                <ReactQuill setBody={setBody} body={body} />\n            </div>\n        \n            <div ref={divRef} dangerouslySetInnerHTML={{\n                __html: body\n            }} style={{display:'none'}} />\n            <small>{text.length}</small>\n\n            <button className=\"btn btn-dark mt-3 d-block mx-auto\" onClick={handleSubmit}>\n                { id ? 'Update' : 'Create' }\n            </button>\n        </div>\n    )\n}\n\nexport default CreateBlog;","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { countView } from \"../../redux/actions/blogActions\";\nimport { IBlog } from \"../../utils/TypeScript\";\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst CardVert: React.FC<IProps> = ({ blog }) => {\n\n\n    const dispatch = useDispatch()\n\n    return(\n        <div className=\"card card__none scale_card bg-white\" style={{borderRadius: '15px'}}>\n            {\n                typeof(blog.thumbnail) === 'string' &&\n                <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                    <img src={blog.thumbnail} className=\"card-img-top \" alt=\"...\"\n                        style={{height: '200px', objectFit: 'cover'}} />\n                </Link>\n            }\n            <div className=\"card-body text-capitalize\">\n                <li>\n                    {new Date(blog.createdAt).toDateString()}\n                </li>\n                <h5 className=\"card-title fs-4\">\n                    <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                        {blog.title}\n                    </Link>\n                </h5>\n                <p className=\"card-text\">\n                    {blog.description.slice(0,70) + \"...\"}\n                </p>\n                <span className=\"card-text\">\n                    <small className=\"text-secondary\">\n                    By: \n                        {\n                        typeof(blog.user) !== 'string' &&\n                        <Link className=\"username\" to={`/profile/${blog.user._id}`}>\n                           {blog.user.name}\n                        </Link>\n                        }\n                    </small>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default CardVert;","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { countView } from \"../../redux/actions/blogActions\";\nimport { IBlog } from '../../utils/TypeScript';\n\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst CardHorizontal: React.FC<IProps> = ({blog}) => {\n\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"card mb-3 bg-white card__none scale_card\" style={{maxWidth: \"840px\", borderRadius: '15px'}}>\n            <div className=\"row g-0 p-2\">\n                <div className=\"col-md-4\" style={{\n                    minHeight: '150px', maxHeight: '170px', overflow: 'hidden'\n                }}>\n                {\n                    blog.thumbnail && \n                    <>\n                    {\n                        typeof(blog.thumbnail) === 'string'\n                        ? <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                            <img src={blog.thumbnail} \n                            className=\"w-100 h-100\" \n                            alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                          </Link>\n                        :<img src={URL.createObjectURL(blog.thumbnail)} \n                            className=\"w-100 h-100\" \n                            alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                    }\n                    </>\n                }\n                \n                </div>\n                \n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title fs-4\">\n                            <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}\n                            className=\"text-capitalize\">\n                                {blog.title}\n                            </Link>\n                        </h5>\n                        <p className=\"card-text\">{`${blog.description.slice(0,100)}...`}</p>\n                        {   \n                            blog.title && \n                                <div className=\"card-text\"> \n                                By:<small>\n                                    {\n                                        typeof(blog.user) !== 'string' &&\n                                            <Link className='username' to={`/profile/${blog.user._id}`}>\n                                                {blog.user.name}\n                                            </Link>\n                                    }\n                                    </small>\n                                    <small className='ms-5'>{new Date().getMonth() - new Date(blog.createdAt).getMonth()} months ago</small>\n                                </div>\n                        }\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CardHorizontal;","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { deleteBlog } from \"../../redux/actions/blogActions\";\n\nimport { IBlog,IParams, IUser, RootStore } from \"../../utils/TypeScript\";\nimport { ALERT } from \"../../redux/types/alertType\";\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst CardHoriz: React.FC<IProps> = ({blog}) => {\n\n    const { slug } = useParams<IParams>()\n    const { auth } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        if(!auth.user || !auth.access_token) return;\n\n        if(slug === auth.user._id || auth.user.role === 'admin') {\n            if(window.confirm(\"Do you want to delete this blog?\")) {\n                dispatch(deleteBlog(blog, auth.access_token))\n            }\n        }else {\n            return dispatch({\n                type: ALERT,\n                payload: { errors: \"Invalid Authentication\"}\n            })\n        } \n        \n    }\n\n    return(\n        <div className=\"card mb-3 bg-white\" style={{minWidth: \"260px\", borderRadius: '15px'}}>\n            <div className=\"row g-0 p-2\">\n                <div className=\"col-md-4\" style={{\n                    minHeight: '150px', maxHeight: '170px', overflow: 'hidden'\n                }}>\n                {\n                    blog.thumbnail && \n                    <>\n                    {\n                        typeof(blog.thumbnail) === 'string'\n                        ? <Link to={`/blog/${blog._id}`}>\n                            <img src={blog.thumbnail} \n                            className=\"w-100 h-100\" \n                            alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                          </Link>\n                        :<img src={URL.createObjectURL(blog.thumbnail)} \n                            className=\"w-100 h-100\" \n                            alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                    }\n                    </>\n                }\n                \n                </div>\n                \n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title fs-4\">\n                            <Link to={`/blog/${blog._id}`}\n                            className=\"text-capitalize\">\n                                {blog.title}\n                            </Link>\n                        </h5>\n                        <p className=\"card-text\">{`${blog.description.slice(0,100)}...`}</p>\n                        {   \n                            blog.title && \n                                <div className=\"card-text d-flex justify-content-between align-items-center\">\n                                    {\n                                        ((slug && ((blog.user as IUser)._id === auth.user?._id)) || (auth.user?.role === 'admin')) &&\n                                        <div>\n                                            <Link to={`/update_blog/${blog._id}`}>\n                                                <i className=\"fas fa-edit text-success\" title=\"edit\" />\n                                            </Link>\n\n                                            <i className=\"fas fa-trash text-danger mx-3\" \n                                                title=\"delete\" onClick={handleDelete} />\n                                        </div> \n                                    }   \n                                    <small className=\"text-secondary\">\n                                        {new Date(blog.createdAt).toDateString()}\n                                    </small>\n                                </div>\n                        }\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CardHoriz;","import { IUser } from \"../../utils/TypeScript\";\n\nexport const GET_OTHER_INFO = \"GET_OTHER_INFO\"\n\nexport interface IGetOtherInfoType {\n    type: typeof GET_OTHER_INFO\n    payload: IUser\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { countView } from '../../../redux/actions/blogActions';\nimport { Link } from 'react-router-dom';\nimport './feature.css'\n\ninterface IProps {\n    id?: string\n    title: string\n    description: string\n}\n\nconst FeatureList: React.FC<IProps> = ({id,title,description}) => {\n\n    const dispatch = useDispatch()\n\n    return(\n        <div className=\"home__features-container_feature\">\n            <div className=\"home__features-container_feature-title\">\n                <div />\n                <h1>\n                   <Link onClick={() => dispatch(countView(id))} className='text-white' to={`/blog/${id}`}>\n                        {title}\n                   </Link> \n                </h1>\n            </div>\n            <div className=\"home__features-container_feature-text\">\n                <p>{`${description.slice(0,100)}...`}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default FeatureList;","import { useEffect, useState } from 'react';\nimport { getAPI } from '../../../utils/FetchDatas';\nimport { IBlog } from '../../../utils/TypeScript';\nimport './feature.css'\nimport FeatureList from './FeatureList';\n\n\nconst Feature = () => {\n\n    const [blogs,setBlogs] = useState<IBlog[]>([])\n\n    useEffect(() => {\n        getAPI('trending')\n            .then(res => setBlogs(res.data))\n            .catch(err => console.log(err.response.data.msg))\n    },[])\n\n    return(\n        <div className=\"home__feature\">\n            <div className=\"home__feature-heading\">\n                <h1 className='text-white'>Trending Subjects</h1>\n            </div>\n            <div className=\"home__feature-container\">\n                {\n                   blogs.map(blog => (\n                        <FeatureList key={blog._id} id={blog._id} title={blog.title} description={blog.description}/>\n                   ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Feature;","import { useDispatch, useSelector } from \"react-redux\";\nimport { countView } from \"../../../redux/actions/blogActions\";\nimport { Link } from \"react-router-dom\";\nimport { RootStore } from \"../../../utils/TypeScript\";\nimport './hero.css';\nimport Feature from \"../feature/Trending\"\nimport React from \"react\";\n\n\nconst Hero = () => {\n\n    const { homeBlogs } = useSelector((state: RootStore) => state)\n\n    const dispatch = useDispatch()\n    \n    return(\n        // <div className='home'>  \n        //     {\n        //         homeBlogs.slice(0,1).map(homeBlog => (\n        //             homeBlog.blogs.slice(0,1).map((blog,index) => (\n        //                 <div key={index} className=\"home__container\">\n        //                     {\n        //                         typeof(blog.thumbnail) === 'string' &&\n        //                         <img src={blog.thumbnail} alt=\"ai\"/>\n        //                     }\n        //                     <div className=\"home__container-content\">\n        //                         <Link className=\"scale_button\" to={`/blogs/${homeBlog.name}`}>\n        //                             <button>{homeBlog.name}</button>\n        //                         </Link>\n        //                         <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}> \n        //                             <h1 className=\"text-white\">\n        //                                 {blog.title}\n        //                             </h1>\n        //                         </Link>  \n        //                             <p>{blog.description.slice(0,200) + \"...\"}</p>  \n\n        //                         <div  className=\"text-white\">\n        //                             <small>{new Date().getMonth() - new Date(blog.createdAt).getMonth()} months ago</small>\n        //                             <small className=\"mx-4\">{blog.views} views</small>\n        //                         </div>\n        //                     </div> \n        //                     <Feature />\n        //                 </div>    \n        //             ))\n        //         )) \n        //     }   \n        // </div>\n        \n        <div className=\"card hero__card\">\n            {\n                homeBlogs.slice(0,1).map(homeBlog => (\n                    homeBlog.blogs.slice(0,1).map(blog => (\n                        <React.Fragment key={blog._id}>\n                            {\n                                typeof(blog.thumbnail) === 'string' &&\n                                <img className=\"card-img\" src={blog.thumbnail} alt=\"thumbnail\" \n                                style={{height: '100%', objectFit: 'cover'}}/>\n                            }\n                            \n                            <div className=\"card-img-overlay p-0 d-flex flex-column justify-content-between\" style={{background: 'linear-gradient(to right,rgba(0,0,0,0.4),rgba(0,0,0,0.3))'}}>\n                                <div className=\"hero__container-content\">\n                                    <Link className=\"scale_button\" to={`/blogs/${homeBlog.name}`}>\n                                        <button>{homeBlog.name}</button>\n                                    </Link>\n                                    <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}> \n                                        <h1 className=\"text-white\">\n                                            {blog.title}\n                                        </h1>\n                                    </Link>  \n                                        <p>{blog.description.slice(0,200) + \"...\"}</p>  \n\n                                    <div  className=\"text-white\">\n                                        <small>{new Date().getMonth() - new Date(blog.createdAt).getMonth()} months ago</small>\n                                        <small className=\"mx-4\">{blog.views} views</small>\n                                    </div>\n                                </div> \n                                <Feature />\n                            </div>\n                        </React.Fragment>\n                    ))\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Hero;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { postEmail } from '../../../redux/actions/subscriberAction';\nimport './cta.css'\n\nconst CTA = () => {\n\n\n    const dispatch = useDispatch()\n    const [email,setEmail] = useState('')\n\n    const handleSumbit = () => {\n        dispatch(postEmail(email))\n        setEmail('')\n    }\n\n    return(\n        <div className=\"home__cta neomorphism\">\n            <div className=\"home__cta-content\">\n                <p>Subscribe to Get Access to the great</p>\n                <h3>Subscribe & get all the Latest and Greatest posts from us</h3>\n            </div>\n            <div className=\"home__cta-container\">\n                <input type='email' name='email' value={email} onChange={(e) => setEmail(e.target.value) } placeholder='Enter you email...' />\n                <button type=\"button\" onClick={() => handleSumbit()}>\n                    Subscribe\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CTA;","import { useEffect, useState } from 'react';\nimport { getAPI } from '../../../utils/FetchDatas';\nimport { IBlog } from '../../../utils/TypeScript';\nimport CardHorizontal from '../../cards/CardHorizontal';\nimport './feature.css'\n\n\n\nconst Underrated = () => {\n\n    const [ blogs,setBlogs ] = useState<IBlog[]>([])\n\n    useEffect(() => {\n        getAPI('underrated')\n        .then(res => setBlogs(res.data))\n    },[])\n\n    return(\n        <div className='mt-5'>\n            <h1 style={{fontWeight: 500}}>You May Like</h1>\n            {\n                blogs.map(blog => (\n                    <CardHorizontal key={blog._id} blog={blog} />\n                ))\n            }\n        </div>\n        \n    )\n}\n\n\nexport default Underrated;","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootStore } from \"../../utils/TypeScript\";\nimport { Link } from \"react-router-dom\";\nimport { countView } from \"../../redux/actions/blogActions\";\n\n\n\nconst CardGrid = () => {\n\n    const { homeBlogs } = useSelector((state: RootStore) => state)\n\n    const dispatch = useDispatch()\n\n    return(\n        <>\n            {\n                homeBlogs.slice(2,4).map(homeBlog => (\n                    homeBlog.blogs.slice(0,4).map(blog => (\n                        <div key={blog._id} className=\"card border-0 bg-transparent\">\n                            <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                                    {\n                                        typeof (blog.thumbnail) === \"string\" &&\n                                        \n                                            <img src={blog.thumbnail} className=\"card-img\" alt=\"thumbnail\"\n                                            style={{height: '280px', objectFit: 'cover'}}/>\n                                        \n                                    }\n                                    <div className=\"card-img-overlay text-light text__overlay\">\n                                        <Link className=\"scale_button\" to={`/blogs/${homeBlog.name}`}>\n                                            <button className=\"card-title button__overlay\">{homeBlog.name}</button>\n                                        </Link>\n                                        <h3 className=\"card-title text-capitalize\">{blog.title}</h3>\n                                        <p className=\"card-text\">{new Date().getMonth() - new Date(blog.createdAt).getMonth()} months ago</p>\n                                    </div>\n                            </Link>\n                        </div>\n                    ))\n                ))\n            }\n        </>\n    )\n}\n\nexport default CardGrid;","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { IBlog } from \"../../utils/TypeScript\";\nimport { countView } from '../../redux/actions/blogActions'\n\n\n\ninterface IProps {\n    blog: IBlog\n    category: string\n}\n\nconst CardOverlay: React.FC<IProps> = ({blog,category}) => {\n\n    const dispatch = useDispatch()\n\n    return(\n        <div className=\"card border-0 bg-transparent\">\n            <Link onClick={() => dispatch(countView(blog._id))} to={`/blog/${blog._id}`}>\n                <div className=\"scale_image\">\n                    {\n                        typeof (blog.thumbnail) === \"string\" &&\n                        \n                            <img src={blog.thumbnail} className=\"card-img\" alt=\"thumbnail\"\n                            style={{height: '280px', objectFit: 'cover'}}/>\n                        \n                    }\n                    <div className=\"card-img-overlay\">\n                        <Link className=\"scale_button\" to={`/blogs/${category}`}>\n                            <button className=\"card-title button__overlay\">{category}</button>\n                        </Link>\n                    </div>\n                </div>\n            </Link>\n            <h3 className=\"text-capitalize\">{blog.title}</h3>\n        </div>\n    )\n}\n\nexport default CardOverlay;","import { useEffect, useState } from \"react\";\nimport { IHomeBlogs } from \"../../../redux/types/blogType\";\nimport { getAPI } from \"../../../utils/FetchDatas\";\nimport CardOverlay from \"../../cards/CardOverlay\";\n\n\nconst Popular = () => {\n\n    const [ editorBlogs,setEditorBlogs ] = useState<IHomeBlogs[]>([])\n\n    useEffect(() => {\n        getAPI('popular')\n            .then(res => setEditorBlogs(res.data))\n            .catch(err => console.log(err))       \n    },[setEditorBlogs])\n\n    return ( \n        <div className=\"mt-5\">\n            <h1 style={{fontWeight: 500}}>\n                Most Popular\n            </h1>\n            <div className=\"mb-5\">\n                <div className=\"home_blogs-list\">\n                    {\n                        editorBlogs.slice(0,2).map(editorBlog => (\n                        \n                            editorBlog.blogs.map(blog => (\n                                <CardOverlay key={blog._id} category={editorBlog.name} blog={blog} />   \n                            ))\n                            \n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Popular;","import { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { RootStore } from \"../utils/TypeScript\";\nimport CardVert from \"../components/cards/CardVert\";\nimport Loading from '../components/global/Loading';\nimport Hero from \"../components/display/hero/Hero\";\nimport CTA from '../components/display/cta/CTA';\nimport Underrated from \"../components/display/feature/Underrated\";\nimport CardGrid from \"../components/cards/CardGrid\";\nimport Popular from \"../components/display/feature/Popular\";\n\n\nconst Home = () => {\n    const { homeBlogs } = useSelector((state: RootStore) => state)\n\n\n    if(homeBlogs.length === 0) return <Loading/>\n    return(\n        <>\n        <Hero />\n        <div className=\"container\">\n            {\n                homeBlogs.slice(0,2).map(homeBlog => (\n                    <div key={homeBlog._id}>\n                        {\n                            homeBlog.count > 0 && \n                            <>\n                                <h2 className=\"text-capitalize\">\n                                    <Link to={ `/blogs/${(homeBlog.name).toLowerCase()}` }>\n                                        { homeBlog.name } <small>({ homeBlog.count })</small>\n                                    </Link>\n                                </h2>\n                \n                                <div className=\"home_blogs-vert\">\n                                {\n                                    homeBlog.blogs.slice(0,4).map(blog => (\n                                    <CardVert key={blog._id} blog={blog} />\n                                    ))\n                                }\n                                </div>\n                          </>\n                        \n                        }\n                        {\n                            homeBlog.count > 4 && \n                                <Link className=\"d-block text-end\" style={{color: '#0077CC'}}\n                                to={`/blogs/${homeBlog.name}`}>\n                                    More on {homeBlog.name} --&gt;\n                                </Link>\n                        }\n\n                    </div>\n                ))  \n            }\n            <Popular />\n            <h1 style={{fontWeight: 500}}>Pro Topics</h1>\n            <div className=\"home_blogs-vert mb-5\">\n                <CardGrid />\n            </div>\n            <Underrated/>\n        </div>\n        <CTA />\n        </>\n    )\n}\n\nexport default Home;","import axios from \"axios\"\n\nexport const postAPI = async (url:string, post:object, token?:string) => {\n    const res = await axios.post(`/api/${url}`, post, {\n        headers: { Authorization: token }\n    })\n\n    return res;\n}\n\n\nexport const getAPI = async (url:string, token?:string) => {\n    const res = await axios.get(`/api/${url}`,{\n        headers: {Authorization: token}\n    })\n\n    return res;\n}\n\n\nexport const patchAPI = async (url:string, post:object, token?:string) => {\n    const res = await axios.patch(`/api/${url}`, post, {\n        headers: { Authorization: token }\n    })\n\n    return res;\n}\n\nexport const putAPI = async (url:string, post:object, token?:string) => {\n    const res = await axios.put(`/api/${url}`, post, {\n        headers: { Authorization: token }\n    })\n\n    return res;\n}\n\n\n\nexport const deleteAPI = async (url:string, token?:string) => {\n    const res = await axios.delete(`/api/${url}`, {\n        headers: { Authorization: token }\n    })\n\n    return res;\n}\n\n\n","\n\n\nconst About = () => {\n    return (\n        <div className=\"container my-5\" style={{maxWidth: '50rem'}}>\n            <h1 className=\"text-center mb-5\" style={{color: '#0077CC'}}>About Tipsaza</h1>\n            <div className=\"fs-5\">\n                <p>\n                    We are a high school teenagers born and grown up with devices and the internet in our hand.\n                    Hence, we are a great researcher and a quick learners\n                 </p>\n                 <p>\n                    We spend lot and lot of time to extract the raw information from tons of sources about any particular\n                    subject. We then write it down in such a way that a person with zero knowledge will be able to talk about \n                    it and could explain others\n                 </p>\n                 <p>\n                    The purpose of this work that do is to make sure you don't waste your valuable time \n                    going through tons of articles to understand any matter but be fully gained in a single page.\n                 </p>\n            </div>\n        </div>\n    )\n}\n\nexport default About;","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { IParams } from '../../utils/TypeScript'\nimport { postAPI } from '../../utils/FetchDatas'\nimport { showErrMsg, showSuccessMsg } from '../../components/alert/Alert'\n\nconst Active = () => {\n  const { slug }: IParams = useParams()\n  const [err, setErr] = useState('')\n  const [success, setSuccess] = useState('')\n\n  useEffect(() => {\n    if(slug){\n      postAPI('active', { active_token: slug })\n      .then(res => setSuccess(res.data.msg))\n      .catch(err => setErr(err.response.data.msg))\n    }\n  },[slug])\n\n  return (\n    <div>\n      { err && showErrMsg(err) }\n      { success && showSuccessMsg(success) }\n    </div>\n  )\n}\n\nexport default Active","import { useState,useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootStore,IParams, IBlog } from \"../../utils/TypeScript\";\nimport { getBlogsByCategoryId } from \"../../redux/actions/blogActions\";\nimport Loading from \"../../components/global/Loading\";\nimport Pagination from \"../../components/global/Pagination\";\nimport CardVert from \"../../components/cards/CardVert\";\n\n\nconst BlogsByCategory = () => {\n    const { categories,blogsCategory } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n    const { slug } =  useParams<IParams>()\n    \n    const history = useHistory()\n    const { search } = history.location\n    \n    const [ categoryId,setCategoryId ] = useState('')\n    const [ categoryName,setCategoryName ] = useState('')\n    const [ blogs,setBlogs ] = useState<IBlog[]>()\n    const [ total,setTotal ] = useState(0)\n\n    useEffect(() => {\n        const category = categories.find(element => element.name === slug )  //find gets the very first elemet which satifies the given condition....\n\n        if(category){\n            setCategoryId(category._id) \n            setCategoryName(category?.name)\n        } \n\n    },[slug,categories])\n\n    useEffect(() => {\n        if(!categoryId) return;\n\n        if(blogsCategory.every(item => item.id !== categoryId)) {\n            dispatch(getBlogsByCategoryId(categoryId, search))\n        }else {\n            const data = blogsCategory.find(element => element.id === categoryId)\n            if(!data) return;\n\n            setBlogs(data.blogs)\n            setTotal(data.total)\n\n            if(data.search) history.push(data.search) //the search came when we put the search on blogsType.ts\n        }\n            \n    },[categoryId, blogsCategory, dispatch, search, history])\n\n    const handlePagination = (num: number) => {\n        const search = `?page=${num}`\n        dispatch(getBlogsByCategoryId(categoryId, search))\n    }\n\n    if(!blogs) return <Loading/>\n    return (\n        <div className=\"container\">\n            <h1 className=\"text-center text-capitalize text-secondary mb-5\">{categoryName}</h1>\n            <div className=\"show_blogs\">\n                {\n                    blogs.map(blog => (\n                        <CardVert key={blog._id} blog={blog} />\n                    ))\n                }\n            </div>\n            {\n                total > 1 && \n                <Pagination total={total} callback={handlePagination} />\n            }\n           \n        </div>\n    )\n}\n\nexport default BlogsByCategory;","import { useState,useEffect } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { FormSubmit,RootStore,ICategory } from \"../utils/TypeScript\";\nimport { createCategory,updateCategory,deleteCategory } from \"../redux/actions/categoryActions\";\nimport NotFound from \"../components/global/NotFound\";\n\n\nconst Category = () => {\n\n    const [name, setName] = useState('')\n    const [edit, setEdit] = useState<ICategory | null>(null)\n  \n    const { auth, categories } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n  \n    useEffect(() => {\n      if(edit) setName(edit.name)\n    },[edit])\n  \n    const handleSubmit = (e: FormSubmit) => {\n      e.preventDefault()\n      if(!auth.access_token || !name) return;\n  \n      if(edit){\n        if(edit.name === name) return;\n        const data = {...edit, name}\n        dispatch(updateCategory(data, auth.access_token))\n      }else{\n        dispatch(createCategory(name, auth.access_token))\n      }\n      setName('')\n      setEdit(null)\n    }\n  \n  \n    const handleDelete = (id: string) => {\n      if(!auth.access_token) return;\n      if(window.confirm('Are you sure to delete this category?')){\n        dispatch(deleteCategory(id, auth.access_token))\n      }\n    }\n\n    if(auth.user?.role !== 'admin') return <NotFound />\n    return(\n        <div className=\"category\">\n            <form onSubmit={handleSubmit}>\n                <label className=\"text-secondary\" htmlFor=\"category\">Category</label>\n\n                <div className=\"d-flex align-items-center\">\n                    {\n                        edit && <i \n                                    className=\"fas fa-times me-2 text-danger\"\n                                    onClick={() => setEdit(null)} />\n                    }\n                    <input \n                        type=\"text\" id=\"category\" \n                        name=\"category\" value={name} \n                        onChange={(e) => setName(e.target.value)} />\n\n                    <button type=\"submit\">\n                        {edit ? 'Update' : 'Create'}\n                    </button>    \n                </div>\n            </form>\n            <div>\n                {\n                    categories.map((category) => (\n                        <div className=\"category_row\" key={category._id}>\n                            <p className=\"m-0 fw-bolder text-capitalize\">{category.name}</p>\n\n                            <div className=\"text-muted\">\n                                <i className=\"fas fa-edit mx-2\"\n                                   onClick={() => setEdit(category)} />\n                                <i className=\"fas fa-trash-alt\"\n                                   onClick={() => handleDelete(category._id)}/>\n                            </div>\n                        </div>\n                    ))\n                }\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Category;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { forgotPassword } from '../redux/actions/authActions';\nimport { FormSubmit } from '../utils/TypeScript';\n\n\nconst ForgotPassword = () => {\n\n    const [email,setEmail] = useState('')\n\n    const dispatch = useDispatch()\n\n    const handleSend = (e: FormSubmit) => {\n        e.preventDefault()\n        dispatch(forgotPassword(email))\n    }\n\n    return(\n        <div className=\"container my-4\" style={{maxWidth:'500px'}}>\n            <h2>Forgot Password?</h2>\n            <p className='text-secondary'>Please confirm your email address in order to reset your password</p>\n\n            <form className=\"form-group\" onSubmit={handleSend}>\n                <label htmlFor=\"email\">Email:</label>\n\n                <div className=\"d-flex align-items-center\">\n                    <input \n                        id=\"email\" type=\"email\" \n                        className=\"form-control\" \n                        name=\"email\" \n                        onChange={(e) => setEmail(e.target.value)}/>\n\n                    <button type=\"submit\" className=\"btn btn-primary mx-2 d-flex align-items-center\">\n                        <i className=\"fas fa-paper-plane me-2\" /> Send\n                    </button>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default ForgotPassword;","import { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { resetPassword } from '../../redux/actions/profileActions';\nimport { FormSubmit, IParams } from '../../utils/TypeScript';\n\n\n\nconst ResetPassword = () => {\n\n    const token = useParams<IParams>().slug\n    const dispatch = useDispatch()\n\n    const [password,setPassword] = useState('')\n    const [cfPassword,setCfPassword] = useState('')\n    const [typePass,setTypePass] = useState(false)\n    const [typeCfPass,setTypeCfPass] = useState(false)\n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        dispatch(resetPassword(password,cfPassword,token))\n    }\n\n    return(\n        <div className=\"auth_page\">\n            <form className=\"auth_box\" onSubmit={handleSubmit}>\n                <h3 className=\"text-uppercase text-center mb-4\">\n                    Reset Password\n                </h3>\n                <div className=\"form-group my-2\">\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                    <div className=\"pass\">\n                        <input \n                            type={ typePass ? \"text\" : \"password\"}\n                            id=\"password\" \n                            className=\"form-control\" \n                            name=\"password\"\n                            placeholder=\"Your password must be 6 chars\"  \n                            onChange={e => setPassword(e.target.value)} />\n\n                        <small onClick={() => setTypePass(!typePass)}>\n                            {typePass ? \"Hide\" : \"Show\"}\n                        </small>    \n                    </div>\n                </div>\n\n                <div className=\"form-group my-2\">\n                    <label htmlFor=\"cf_password\" className=\"form-label\">Confirm Password</label>\n                    <div className=\"pass\">\n                        <input \n                            type={ typeCfPass ? \"text\" : \"password\"}\n                            id=\"cf_password\" \n                            className=\"form-control\" \n                            name=\"cf_password\"\n                            placeholder=\"Your password must be 6 chars\" \n                            onChange={e => setCfPassword(e.target.value)} />\n\n                        <small onClick={() => setTypeCfPass(!typeCfPass)}>\n                            {typeCfPass ? \"Hide\" : \"Show\"}\n                        </small>    \n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-dark w-100 mt-2\">\n                    Sumbit\n                </button>\n            </form>\n        </div>    \n    )\n}\n\nexport default ResetPassword;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteEmail, getEmails } from \"../redux/actions/subscriberAction\";\nimport { RootStore } from \"../utils/TypeScript\";\nimport NotFound from \"../components/global/NotFound\";\n\n\nconst Subscription = () => {\n\n    const { auth,subscribers } = useSelector((state: RootStore) => state)\n    \n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(auth.user?.role === 'admin') dispatch(getEmails(auth.access_token!))\n    },[dispatch,auth.user?.role,auth.access_token])\n\n    const handleDelete = (id:string) => {\n        if(auth.user?._id !== id) {\n            if(window.confirm(\"Are you sure you want to delete this user?\")){\n               dispatch(deleteEmail(id,auth.access_token!))\n            }\n        }\n    }\n\n    if(auth.user?.role !== \"admin\") return <NotFound/>\n    return (\n        <div className=\"w-100 my-5 d-flex justify-content-center overflow-auto\">\n            <div>\n                <table className=\"table neomorphism\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">_id</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">CreatedAt</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"text-secondary\">\n                       {\n                           subscribers.map(data => (\n                            <tr key={data._id} >\n                                <th scope=\"row\">{data._id}</th>\n                                <td>{data.email}</td>\n                                <td>{new Date(data.createdAt).toDateString()}</td>\n                                <td className=\"text-center\">\n                                    <i style={{cursor:'pointer'}} className=\"fas fa-trash-alt text-danger\" title=\"Remove\"\n                                        onClick={() => handleDelete(data._id)} ></i>\n                                </td>\n                            </tr>\n                           ))\n                       }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Subscription;","import { useParams } from 'react-router-dom';\nimport { IParams } from '../../utils/TypeScript';\nimport CreateBlog from '../create_blog';\n\n\nconst UpdateBlog = () => {\n\n    const { slug } : IParams  = useParams()\n\n    return <CreateBlog id={slug} />\n    \n}\n\nexport default UpdateBlog;\n\n","import { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport NotFound from \"../components/global/NotFound\";\nimport { IBlog, RootStore } from \"../utils/TypeScript\";\nimport { deleteBlog } from \"../redux/actions/blogActions\";\nimport { ALERT } from \"../redux/types/alertType\";\n\n\n\nconst Views = () => {\n\n    const { auth,homeBlogs } = useSelector((state: RootStore) => state)\n\n    const dispatch = useDispatch()\n\n    const handleDelete = (blog: IBlog) => {\n        if(!auth.user || !auth.access_token) return;\n\n        if(auth.user.role === 'admin') {\n            if(window.confirm(\"Do you want to delete this blog?\")) {\n                dispatch(deleteBlog(blog, auth.access_token))\n            }\n        }else {\n            return dispatch({\n                type: ALERT,\n                payload: { errors: \"Invalids Authentication\"}\n            })\n        } \n    }\n\n\n    if(auth.user?.role !== \"admin\") return <NotFound/>\n    return(\n        <div className=\"w-100 my-5 d-flex justify-content-center overflow-auto\">\n            <div>\n                <table className=\"table neomorphism\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">_id</th>\n                            <th scope=\"col\">Category</th>\n                            <th scope=\"col\">Title</th>\n                            <th scope=\"col\">Writer</th>\n                            <th scope=\"col\">Views</th>\n                            <th scope=\"col\">CreatedAt</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"text-secondary\">\n                        {\n                            homeBlogs.map(homeBlog => (\n                                homeBlog.blogs.map(blog => (\n                                    <tr key={blog._id}>\n                                        <th scope=\"row\">{blog._id}</th>\n                                        <td>{homeBlog.name}</td>\n                                        <td>\n                                            <Link to={`/blog/${blog._id}`}>\n                                                {blog.title.slice(0,50) + \"...\"}\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            {\n                                                typeof(blog.user) !== 'string' &&\n                                                <Link to={`/profile/${blog.user._id}`}>{blog.user.name}</Link>\n                                            }\n                                        </td>\n                                        <td className=\"text-center\">{blog.views}</td>\n                                        <td>{new Date(blog.createdAt).toDateString()}</td>\n                                        <td>\n                                            <Link style={{marginRight:'15px'}} to={`/update_blog/${blog._id}`}>\n                                                <i className=\"fas fa-edit text-success\" title=\"Edit\"></i>\n                                            </Link>\n                                            <i style={{cursor:'pointer'}} className=\"fas fa-trash-alt text-danger\" title=\"Remove\"\n                                            onClick={() =>  handleDelete(blog)}></i>\n                                        </td>\n                                    </tr>\n                                ))\n                            ))    \n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Views;","import React,{ useState,useEffect } from 'react'\nimport { useDispatch,useSelector } from 'react-redux';\nimport { useParams,useHistory } from 'react-router-dom';\nimport { IBlog, IParams, RootStore } from '../../utils/TypeScript';\nimport { getBlogsByUserId } from '../../redux/actions/blogActions';\nimport Loading from '../global/Loading';\nimport CardHoriz from '../cards/CardHoriz';\nimport Pagination from '../global/Pagination';\n\nconst UserBlogs = () => {\n\n    const { blogsUser } = useSelector((state: RootStore) => state)\n    const user_id = useParams<IParams>().slug\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { search } = history.location\n\n    const [ blogs,setBlogs ] = useState<IBlog[]>()\n    const [ total,setTotal ] = useState(0)\n\n    useEffect(() => {\n        if(!user_id) return;\n\n        if(blogsUser.every(item => item.id !== user_id)) {\n            dispatch(getBlogsByUserId(user_id, search))\n        }else{\n            const data = blogsUser.find(item => item.id === user_id)\n            if(!data) return;\n\n            setBlogs(data.blogs)\n            setTotal(data.total)\n            if(data.search) history.push(data.search)\n        }\n    \n    },[user_id, blogsUser, dispatch, search, history])\n\n    const handlePagination = (num: number) => {\n        const search = `?page=${num}`\n        dispatch(getBlogsByUserId(user_id, search))\n    }\n\n    if(!blogs) return <Loading/>\n\n    if(blogs.length === 0 && total < 1) return (\n        <h3 className=\"text-center\">No Blogs yet</h3>\n    )\n    \n    return(\n        <div>\n            <div>\n                {\n                    blogs.map(blog => (\n                        <CardHoriz key={blog._id} blog={blog} />\n                    ))\n                }\n            </div>\n\n            <div>\n                    <Pagination \n                        total={total} \n                        callback={handlePagination} />\n            </div>\n        </div>\n    )\n}\n\nexport default UserBlogs;","import { useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootStore,InputChange, IUserProfile,FormSubmit } from \"../../utils/TypeScript\";\nimport NotFound from \"../global/NotFound\";\nimport { updateUser,resetPassword } from \"../../redux/actions/profileActions\";\n\nconst UserInfo = () => {\n    const initState = {\n        name:'',\n        email:'',\n        avatar:'',\n        password:'',\n        cf_password:''\n    }\n\n    const { auth } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n\n    const [ user,setUser ] = useState<IUserProfile>(initState)\n    const [ typePass,setTypePass ] = useState(false)\n    const [ typeCfPass,setTypeCfPass ] = useState(false)\n\n    const handleChangeInput = (e: InputChange) => {\n        const { name,value } = e.target\n        setUser({...user, [name]:value })\n    }\n\n    const handleChangeFile = (e: InputChange) => {\n        const target = e.target as HTMLInputElement\n        const files = target.files\n\n        if(files) {\n            const file = files[0]\n            setUser({...user, avatar: file})\n        }\n    }\n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        if( avatar || name ) {\n            dispatch(updateUser((avatar as File),name,auth))\n        }\n\n        if( password && auth.access_token ) {\n            dispatch(resetPassword( password, cf_password, auth.access_token))\n        }\n    }\n\n    const { name,avatar,password,cf_password } = user\n\n    if(!auth.user) return <NotFound/>\n    return(\n        <form className=\"profile_info glassmorphism\" onSubmit={handleSubmit}>\n            <div className=\"info_avatar\">\n                <img src={ avatar ? URL.createObjectURL(avatar) : auth.user?.avatar } alt=\"avatar\" />\n\n                <span>\n                    <i className=\"fas fa-camera\"/>\n                    <p>Change</p>\n                    <input \n                        type=\"file\" \n                        accept=\"image/*\" \n                        name=\"file\" id=\"file_up\"\n                        onChange={handleChangeFile}/>\n                </span>\n            </div>\n           \n            <div className=\"form-group my-3\">\n                <label htmlFor=\"name\">Name</label> \n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    id=\"name\"\n                    className=\"form-control\" \n                    defaultValue={auth.user?.name} \n                    onChange={handleChangeInput} />\n            </div>\n\n            <div className=\"form-group my-3\">\n                <label htmlFor=\"email\">Email</label> \n                <input \n                    type=\"text\" \n                    name=\"email\" \n                    id=\"email\"\n                    className=\"form-control\" \n                    defaultValue={auth.user?.email} \n                    onChange={handleChangeInput} \n                    disabled={true} />\n            </div>\n\n            <div className=\"form-group my-3\">\n                <label htmlFor=\"password\">Password</label> \n                <div className=\"pass\">\n                    <input \n                        type={ typePass ? 'text' : 'password'} \n                        className=\"form-control\" \n                        name=\"password\" \n                        id=\"password\"\n                        value={password} \n                        onChange={handleChangeInput} />\n\n                    <small onClick={() => setTypePass(!typePass)}>\n                        {typePass ? 'Hide' : 'Show'}\n                    </small>    \n                </div>\n\n            </div>\n\n            <div className=\"form-group my-3\">\n                <label htmlFor=\"cf_password\">Confirm password</label> \n                <div className=\"pass\">\n                    <input \n                        type={ typeCfPass ? 'text' : 'password'} \n                        className=\"form-control\" \n                        name=\"cf_password\" \n                        id=\"cf_password\"\n                        value={cf_password} \n                        onChange={handleChangeInput} />\n\n                    <small onClick={() => setTypeCfPass(!typeCfPass)}>\n                        {typeCfPass ? 'Hide' : 'Show'}\n                    </small>    \n                </div>\n\n            </div>\n\n            <button className=\"btn btn-dark w-100\" type=\"submit\">\n                Update\n            </button>\n        </form>\n    )\n}\n\nexport default UserInfo;","import React, { useEffect,useState } from \"react\";\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getOtherInfo } from '../../redux/actions/profileActions'\nimport { IUser, RootStore } from \"../../utils/TypeScript\";\nimport Loading from '../global/Loading';\n\ninterface IProps {\n    id: string\n}\n\nconst OtherInfo: React.FC<IProps> = ({id}) => {\n\n    const dispatch = useDispatch()\n    const { otherInfo } = useSelector((state: RootStore ) => state)\n\n    const [ other,setOther ] = useState<IUser>()\n\n    useEffect(() => {\n        if(!id) return;\n    \n        if(otherInfo.every(user => user._id !== id)){\n          dispatch(getOtherInfo(id))\n        }else{\n          const newUser = otherInfo.find(user => user._id === id)\n          if(newUser) setOther(newUser)\n        }\n    },[id, otherInfo, dispatch])\n\n    if(!other) return <Loading/>\n    return(\n        <div className=\"profile_info neomorphism text-center rounded\">\n            <div className=\"info_avatar\">\n                <img src={other.avatar} alt=\"avatar\" />\n            </div>\n\n            <div>\n                <span>\n                    {other.name}\n                </span>\n            </div>   \n\n            <div>\n                <span>\n                    {other.email}\n                </span>\n            </div> \n\n            <div>\n            JoinedAt: <span>\n                        { new Date(other.createdAt).toDateString() }\n                      </span>\n            </div>  \n        </div>\n    )\n}\n\nexport default OtherInfo;","import { useParams } from \"react-router\"\nimport { useSelector } from \"react-redux\"\nimport { IParams } from \"../../utils/TypeScript\"\nimport { RootStore } from \"../../utils/TypeScript\"\nimport UserBlogs from \"../../components/profile/UserBlogs\"\nimport UserInfo from \"../../components/profile/UserInfo\"\nimport OtherInfo from \"../../components/profile/OtherInfo\"\n\nconst Profile = () => {\n    const { slug }: IParams = useParams()\n    const { auth } = useSelector((state : RootStore) => state) \n\n    return (\n        <div className=\"row m-4\">\n           <div className=\"col-md-5 mb-3\">\n                {\n                    auth.user?._id === slug\n                    ? <UserInfo/>\n                    : <OtherInfo id={slug}/>\n                }\n           </div>\n\n           <div className=\"col-md-7\">\n                <UserBlogs/>\n           </div>\n        </div>\n    )\n}\n\nexport default Profile","\n\n\nconst HrBanner = () => {\n    return(\n        <div className=\"w-100 p-5 border\">\n            Ads\n        </div>\n    )\n}\n\nexport default HrBanner;","import React,{ useEffect, useState } from \"react\";\nimport { IBlog, RootStore } from \"../../utils/TypeScript\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link,useHistory } from \"react-router-dom\";\nimport Pagination from \"../global/Pagination\";\nimport { getBlogsByCategoryId } from '../../redux/actions/blogActions'\nimport CardHorizontal from \"../cards/CardHorizontal\";\nimport HrBanner from \"../global/HrBanner\";\n\nimport '../display/hero/hero.css'\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst DisplayBlog: React.FC<IProps> = ({blog}) => {\n\n    const { blogsCategory} = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const { search } = history.location\n\n    const [ blogs,setBlogs ] = useState<IBlog[]>()\n    const [ total,setTotal ] = useState(0)\n\n    useEffect(() => {\n        if(!blog.category) return;\n\n        if(blogsCategory.every(item => item.id !== blog.category)) {\n            dispatch(getBlogsByCategoryId(blog.category, search))\n        }else {\n            const data = blogsCategory.find(element => element.id === blog.category)\n            if(!data) return;\n\n            setBlogs(data.blogs)\n            setTotal(data.total)\n\n            if(data.search) history.push(data.search) //the search came when we put the search on blogsType.ts\n        }\n            \n    },[ blogsCategory,blog.category, dispatch, search, history])\n\n    const handlePaginationRelated = (num: number) => {\n        const search = `?page=${num}`\n        dispatch(getBlogsByCategoryId(blog.category, search))\n    }\n\n    const handleShare = (url:string) => {\n        const currentURL = encodeURI(window.location.href);\n        const throwURL = url + currentURL\n        window.open(throwURL);\n    }\n\n    return(\n        <>\n            <div className=\"card\">\n            </div>\n            <div className=\"container\">\n                <div className=\"\">\n                    <div style={{maxWidth: '48rem',marginLeft: 'auto',marginTop:'2rem', marginRight:'auto'}}>\n                            <h1 className=\"text-capitalize fs-1\">\n                                {blog.title}\n                            </h1>\n                            <p className=\"lead text-capitalize\">\n                                {blog.description}\n                            </p>\n                            <div className=\"d-flex flex-column\">\n                                <div className=\"d-flex\">\n                                By: {\n                                        typeof (blog.user) !== 'string' &&\n                                        <Link to={`/profile/${blog.user._id}`}>\n                                            <p>{blog.user.name}</p>\n                                        </Link>\n                                    }\n                                    <p className=\"ms-4\">{new Date().toDateString()}</p>\n                                </div>\n                                <div className=\"d-flex\" style={{fontSize: '20px', cursor: 'pointer'}}>\n                                    <p onClick={() => handleShare(\"https://www.facebook.com/sharer/sharer.php?u=\")} className=\"me-3\"><i className=\"fab fa-brands fa-facebook\" /></p>\n                                    <p onClick={() => handleShare(\"https://twitter.com/intent/tweet?text=\")}  className=\"mx-3\"><i className=\"fab fa-brands fa-twitter-square\" /></p>\n                                    <p onClick={() => handleShare(\"https://www.linkedin.com/sharing/share-offsite/?url=\")} className=\"mx-3\"><i className=\"fab fa-brands fa-linkedin\" /></p>\n                                </div>\n                            </div>\n                        {\n                            typeof(blog.thumbnail) === 'string' &&\n                            <img src={blog.thumbnail} className=\"card-img display__img\" alt=\"blog-thumbnail\" />\n                        }\n                        <div className=\"display__content mt-4\" style={{fontSize: '1.25rem'}}  dangerouslySetInnerHTML={{\n                            __html: blog.content\n                        }} />\n                    </div>\n                </div>\n                <HrBanner />\n\n                <div className=\"mt-5\">\n                    <h1 style={{fontWeight: 500}}>Related Posts</h1>\n                    {\n                        blogs?.map(blog => (\n                            <CardHorizontal key={blog._id} blog={blog} />\n                        ))\n                    }\n                </div>\n                {\n                    total > 1 && \n                    <Pagination total={total} callback={handlePaginationRelated} />\n                }\n            </div>\n        </>\n    )\n}\n\nexport default DisplayBlog;","import { useState,useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { getAPI } from '../../utils/FetchDatas';\nimport { IBlog, IParams} from '../../utils/TypeScript';\nimport Loading from '../../components/global/Loading';\nimport { showErrMsg } from '../../components/alert/Alert';\nimport DisplayBlog from '../../components/blog/DisplayBlog';\n\n\n \nconst DetailBlog = () => {\n\n    const id = useParams<IParams>().slug\n\n    const [ blog,setBlog ] = useState<IBlog>()\n    const [ loading,setLoading ] = useState(false)\n    const [ error,setError ] = useState('')\n\n    useEffect(() => {\n        if(!id) return;\n        setLoading(true)\n\n        getAPI(`blog/${id}`)\n        .then(res => {\n            setBlog(res.data)\n            setLoading(false)\n        })\n        .catch(err => {\n            setError(\"Blog does not exist\")\n            setLoading(false)\n        })\n\n        return () => setBlog(undefined)\n    },[id])\n\n    if(loading) return <Loading/>\n    return(\n        <div>\n            {error && showErrMsg(error)}\n            \n            { blog && <DisplayBlog blog={blog} />}\n      \n        </div>\n    )\n}\n\nexport default DetailBlog;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { InputChange,FormSubmit } from \"../../utils/TypeScript\";\nimport { login } from \"../../redux/actions/authActions\";\n\n\nconst LoginPass = () => {\n    const initialState = { email:'',password:'' }\n    const [ userLogin,setUserLogin ] = useState(initialState)\n    const { email,password } = userLogin\n\n    const [typePass, setTypePass] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const handleChangeInput = (e:InputChange) => {\n        const { name,value } = e.target\n        setUserLogin({...userLogin, [name]:value})\n    }\n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        dispatch(login(userLogin))\n    }\n\n    return (\n        <form onSubmit={handleSubmit}> \n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"email\" className=\"form-label text-dark\">Email</label>\n                <input \n                    type=\"text\" \n                    id=\"email\" \n                    className=\"form-control\"\n                    name=\"email\" value={email} \n                    onChange={handleChangeInput} />\n            </div>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"password\" className=\"form-label text-dark\">Password</label>\n                <div className=\"pass\">\n                    <input \n                        type={ typePass ? \"text\" : \"password\"}\n                        id=\"password\" \n                        className=\"form-control\" \n                        name=\"password\" value={password} \n                        onChange={handleChangeInput} />\n\n                    <small onClick={() => setTypePass(!typePass)}>\n                        {typePass ? \"Hide\" : \"Show\"}\n                    </small>    \n                </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-dark w-100\" disabled= {(email && password) ? false : true}>\n                Login\n            </button>\n        </form>\n    )\n}\n\nexport default LoginPass;","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link,useHistory } from 'react-router-dom';\nimport LoginPass from \"../components/auth/LoginPass\";\nimport { RootStore } from \"../utils/TypeScript\";\n\nconst Login = () => {\n    const history = useHistory()\n\n    const { auth } = useSelector((state: RootStore) => state)\n\n    useEffect(() => {\n        if(auth.access_token) {\n            let url = history.location.search.replace('?','/')\n            return  history.push(url)\n        }\n    },[auth.access_token,history])\n\n    return(\n        <div className=\"auth_page\"> \n           <div className=\"auth_box neomorphism\">\n               <h3 className=\"text-uppercase text-center fw-bold mb-4\">Welcome Editors</h3>\n               <LoginPass/>\n\n               <small className=\"row my-2 text-primary\">\n                   <span className=\"col-6\">\n                       <Link to='/forgot_password' className=\"text-primary\">\n                            Forgot Password?\n                       </Link>  \n                   </span>\n               </small>\n           </div>\n        </div>\n    )\n}\n\nexport default Login;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { InputChange,FormSubmit } from \"../../utils/TypeScript\";\nimport { register } from \"../../redux/actions/authActions\";\n\n\nconst RegisterForm = () => {\n    const initialState = { name:'', email:'', password:'', cf_password:'' }\n    const [ userRegister,setUserRegister ] = useState(initialState)\n    const { name, email, password, cf_password } = userRegister\n\n    const [typePass, setTypePass] = useState(false)\n    const [typeCfPass, setTypeCfPass] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const handleChangeInput = (e:InputChange) => {\n        const { name,value } = e.target\n        setUserRegister({...userRegister, [name]:value})\n    }\n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        dispatch(register(userRegister))\n    }\n\n    return (\n        <form onSubmit={handleSubmit}> \n\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"name\" className=\"form-label text-dark\">Name</label>\n                <input \n                    type=\"text\" \n                    id=\"name\" \n                    className=\"form-control\"\n                    name=\"name\" value={name} \n                    placeholder=\"ex.David\"\n                    onChange={handleChangeInput} />\n            </div>\n\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"email\" className=\"form-label text-dark\">Email</label>\n                <input \n                    type=\"text\" \n                    id=\"email\" \n                    className=\"form-control\"\n                    name=\"email\" value={email} \n                    placeholder=\"ex.example@gmail.com\"\n                    onChange={handleChangeInput} />\n            </div>\n\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"password\" className=\"form-label text-dark\">Password</label>\n                <div className=\"pass\">\n                    <input \n                        type={ typePass ? \"text\" : \"password\"}\n                        id=\"password\" \n                        className=\"form-control\" \n                        name=\"password\" value={password}\n                        placeholder=\"Your password must be 6 chars\"  \n                        onChange={handleChangeInput} />\n\n                    <small onClick={() => setTypePass(!typePass)}>\n                        {typePass ? \"Hide\" : \"Show\"}\n                    </small>    \n                </div>\n            </div>\n\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"cf_password\" className=\"form-label text-dark\">Confirm Password</label>\n                <div className=\"pass\">\n                    <input \n                        type={ typeCfPass ? \"text\" : \"password\"}\n                        id=\"cf_password\" \n                        className=\"form-control\" \n                        name=\"cf_password\" value={cf_password}\n                        placeholder=\"Your password must be 6 chars\" \n                        onChange={handleChangeInput} />\n\n                    <small onClick={() => setTypeCfPass(!typeCfPass)}>\n                        {typeCfPass ? \"Hide\" : \"Show\"}\n                    </small>    \n                </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-dark w-100 my-1\" disabled= {(name && email && password && cf_password) ? false : true}>\n                Register\n            </button>\n        </form>\n    )\n}\n\nexport default RegisterForm;","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport RegisterForm from '../components/auth/RegisterForm'\nimport NotFound from '../components/global/NotFound';\nimport { RootStore } from '../utils/TypeScript';\n\nconst Register = () => {\n\n  const { auth } = useSelector((state : RootStore) => state)\n  const history = useHistory()\n\n  useEffect(() => {\n    if( auth.access_token && auth.user?.role !== 'admin') {\n      let url = history.location.search.replace('?','/')\n      history.push(url)\n    }\n  },[auth.access_token,auth.user?.role,history])\n\n  if(auth.user?.role !== 'admin') return <NotFound/> \n  return (\n    <div className=\"auth_page\">\n      <div className=\"auth_box neomorphism\">\n        <h3 className=\"text-uppercase text-center mb-4 fw-bold\">Register</h3>\n        <RegisterForm />\n      </div>\n    </div>\n  )\n}\n\nexport default Register","import { useEffect } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport NotFound from \"../components/global/NotFound\";\nimport { deleteUser, getUsers } from \"../redux/actions/usersActions\";\nimport { RootStore } from \"../utils/TypeScript\";\n\n\nconst Users = () => {\n\n    const { auth,users } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n\n    // const [users,setUsers] = useState<IUser[]>([])\n    \n    // useEffect(() => {\n    //    if(auth.user?.role === 'admin') {\n    //        getAPI('users',auth.access_token)\n    //        .then(res => {\n    //             setUsers(res.data)\n\n    //        })\n    //    }\n    // },[auth.access_token,auth.user?.role])\n\n    useEffect(() => {\n        if(auth.user?.role === 'admin') dispatch(getUsers(auth.access_token!))\n    },[dispatch,auth.user?.role,auth.access_token])\n\n    const handleDelete = (id:string) => {\n        if(auth.user?._id !== id) {\n            if(window.confirm(\"Are you sure you want to delete this user?\")){\n               dispatch(deleteUser(id,auth.access_token!))\n            }\n        }\n    }\n\n    if(auth.user?.role !== \"admin\") return <NotFound/>\n    return (\n        <div className=\"w-100 my-5 d-flex justify-content-center overflow-auto\">\n            <div>\n                <table className=\"table neomorphism\">\n                    <thead >\n                        <tr>\n                            <th scope=\"col\">_id</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Admin</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"text-secondary\">\n                        {\n                            users.map(data => (\n                                <tr key={data._id}>\n                                    <th scope=\"row\">{data._id}</th>\n                                    <td>\n                                        <Link to={`/profile/${data._id}`}>\n                                            {data.name}\n                                        </Link>    \n                                    </td>\n                                    <td>{data.email}</td>\n                                    <td className=\"text-center\">\n                                        {\n                                            data.role === \"admin\" \n                                            ? <i className=\"fas fa-check\" title=\"Admin\"></i>\n                                            : <i className=\"fas fa-times\" title=\"User\"></i> \n                                        }\n                                    </td>\n                                    <td className=\"text-center\">\n                                        <i style={{cursor:'pointer'}} className=\"fas fa-trash-alt text-danger\" title=\"Remove\"\n                                        onClick={() => handleDelete(data._id)} ></i>\n                                    </td>\n                                </tr>\n                            \n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Users;","import { Dispatch } from \"redux\"\nimport { checkTokenExp } from \"../../utils/checkTokenExp\"\nimport { deleteAPI, getAPI } from \"../../utils/FetchDatas\"\nimport { ALERT, IAlertType } from \"../types/alertType\"\nimport { DELETE_USER, GET_USERS,IUsersType } from \"../types/usersType\"\n\n\n\nexport const getUsers = (token:string) => async (dispatch: Dispatch<IAlertType | IUsersType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({type: ALERT, payload:{loading:true}})\n\n        const res = await getAPI('users',access_token)\n\n        dispatch({\n            type: GET_USERS,\n            payload: res.data\n        })\n        \n        dispatch({type:ALERT, payload:{loading:false}})\n    } catch (err:any) {\n        dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}\n\nexport const deleteUser = (id:string,token:string) => async (dispatch: Dispatch<IAlertType | IUsersType>) => {\n    const result = await checkTokenExp(token,dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({type:DELETE_USER,payload:id})\n        await deleteAPI(`delete_user/${id}`,access_token)\n\n    } catch (err:any) {\n        dispatch({type: ALERT, payload: {errors: err.response.data.msg}})\n    }\n}"],"sourceRoot":""}